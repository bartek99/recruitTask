[{"D:\\university-management\\frontend\\university-management\\src\\ui\\auth\\LoginPage.tsx":"1","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\AddCoursePage.tsx":"2","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\ShowFacultyPage.tsx":"3","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\schedule\\EditScheduleItemPage.tsx":"4","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\ShowSubjectPage.tsx":"5","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\edit\\EditStudentPage.tsx":"6","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\show\\ShowStudentPage.tsx":"7","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\AddFacultyPage.tsx":"8","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\group\\AddGradeToGroupPage.tsx":"9","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\employee\\ShowEmployeePage.tsx":"10","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\employee\\EmployeesPage.tsx":"11","D:\\university-management\\frontend\\university-management\\src\\ui\\theme-context.tsx":"12","D:\\university-management\\frontend\\university-management\\src\\core\\subjectApi.ts":"13","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\Events.tsx":"14","D:\\university-management\\frontend\\university-management\\src\\core\\common.ts":"15","D:\\university-management\\frontend\\university-management\\src\\core\\groupApi.ts":"16","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\building\\AddBuildingForm.tsx":"17","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\EditTermForm.tsx":"18","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\EditGroupForm.tsx":"19","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\Courses.tsx":"20","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\calendar\\CalendarPage.tsx":"21","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\announcement\\AddAnouncementForm.tsx":"22","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\AdminDashboard.tsx":"23","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\ShowGroupPage.tsx":"24","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\EditSubjectPage.tsx":"25","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\SubjectsPage.tsx":"26","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\building\\EditBuildingPage.tsx":"27","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\subject\\ShowSubjectPage.tsx":"28","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\ShowGradePage.tsx":"29","D:\\university-management\\frontend\\university-management\\src\\core\\announcementApi.ts":"30","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\EditGradeForm.tsx":"31","D:\\university-management\\frontend\\university-management\\src\\core\\facultyApi.ts":"32","D:\\university-management\\frontend\\university-management\\src\\ui\\ChangePasswordForm.tsx":"33","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\Subjects.tsx":"34","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\edit\\EditEmployeeForm.tsx":"35","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\Groups.tsx":"36","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\EditCourseForm.tsx":"37","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\announcement\\ShowAnnouncementPage.tsx":"38","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\AddEventForm.tsx":"39","D:\\university-management\\frontend\\university-management\\src\\ui\\HomePage.tsx":"40","D:\\university-management\\frontend\\university-management\\src\\core\\auth.ts":"41","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\ShowCoursePage.tsx":"42","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\TermsPage.tsx":"43","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\edit\\EditAdminPage.tsx":"44","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\announcement\\AnnouncementsPage.tsx":"45","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\faculty\\FacultiesPage.tsx":"46","D:\\university-management\\frontend\\university-management\\src\\ui\\styles.tsx":"47","D:\\university-management\\frontend\\university-management\\src\\ui\\Title.tsx":"48","D:\\university-management\\frontend\\university-management\\src\\ui\\ChangePasswordPage.tsx":"49","D:\\university-management\\frontend\\university-management\\src\\core\\studentApi.ts":"50","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\room\\Rooms.tsx":"51","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\Terms.tsx":"52","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\AddGroupForm.tsx":"53","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\EditGradePage.tsx":"54","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\student\\ShowStudentPage.tsx":"55","D:\\university-management\\frontend\\university-management\\src\\ui\\ConfirmationDialog.tsx":"56","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\employee\\Employees.tsx":"57","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\EmployeeDashboard.tsx":"58","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\home\\AdminHomePage.tsx":"59","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\me\\AdminMePage.tsx":"60","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\ShowTermPage.tsx":"61","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\room\\AddRoomPage.tsx":"62","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\GradesPage.tsx":"63","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\group\\ShowGroupPage.tsx":"64","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\student\\Students.tsx":"65","D:\\university-management\\frontend\\university-management\\src\\core\\employeeApi.ts":"66","D:\\university-management\\frontend\\university-management\\src\\core\\building.ts":"67","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\schedule\\Schedule.tsx":"68","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\AddSubjectForm.tsx":"69","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\EditEventForm.tsx":"70","D:\\university-management\\frontend\\university-management\\src\\ui\\auth\\LogoutPage.tsx":"71","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\home\\StudentHomePage.tsx":"72","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\grade\\ShowGradePage.tsx":"73","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\FacultiesPage.tsx":"74","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\GroupsPage.tsx":"75","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\schedule\\SchedulePage.tsx":"76","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\AddTermPage.tsx":"77","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\building\\AddBuildingPage.tsx":"78","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\student\\StudentsPage.tsx":"79","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\room\\EditRoomForm.tsx":"80","D:\\university-management\\frontend\\university-management\\src\\core\\courseApi.ts":"81","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\add\\AddAdminForm.tsx":"82","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\AddTermForm.tsx":"83","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\EditFacultyForm.tsx":"84","D:\\university-management\\frontend\\university-management\\src\\ui\\student\\grade\\Grades.tsx":"85","D:\\university-management\\frontend\\university-management\\src\\core\\commentApi.ts":"86","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\AddEventPage.tsx":"87","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\group\\AddGradeToGroupForm.tsx":"88","D:\\Recruit Task\\frontend\\src\\ui\\admin\\AdminDashboard.tsx":"89","D:\\Recruit Task\\frontend\\src\\ui\\styles.tsx":"90","D:\\Recruit Task\\frontend\\src\\ui\\ConfirmationDialog.tsx":"91","D:\\Recruit Task\\frontend\\src\\ui\\Dashboard.tsx":"92","D:\\Recruit Task\\frontend\\src\\index.tsx":"93","D:\\Recruit Task\\frontend\\src\\core\\common.ts":"94","D:\\Recruit Task\\frontend\\src\\ui\\theme-context.tsx":"95","D:\\Recruit Task\\frontend\\src\\ui\\ShowUserPage.tsx":"96","D:\\Recruit Task\\frontend\\src\\reportWebVitals.ts":"97","D:\\Recruit Task\\frontend\\src\\core\\teacher.ts":"98","D:\\Recruit Task\\frontend\\src\\core\\student.ts":"99","D:\\Recruit Task\\frontend\\src\\ui\\Title.tsx":"100","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentToTeacherForm.tsx":"101","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\add\\AddTeacherForm.tsx":"102","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\add\\AddTeacherPage.tsx":"103","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\Teachers.tsx":"104","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentForm.tsx":"105","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\Students.tsx":"106","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentPage.tsx":"107","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentToTeacherPage.tsx":"108","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\StudentsPage.tsx":"109","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\edit\\EditStudentForm.tsx":"110","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\edit\\EditStudentPage.tsx":"111","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\edit\\EditTeacherForm.tsx":"112","D:\\Recruit Task\\frontend\\src\\ui\\admin\\search\\Search.tsx":"113","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\TeachersByStudentPage.tsx":"114","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\TeachersByStudent.tsx":"115","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\StudentsByTeacher.tsx":"116","D:\\Recruit Task\\frontend\\src\\ui\\Pagination.tsx":"117","D:\\Recruit Task\\frontend\\src\\ui\\admin\\search\\SearchPage.tsx":"118","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\TeachersPage.tsx":"119","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\edit\\EditTeacherPage.tsx":"120","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\StudentsByTeacherPage.tsx":"121"},{"size":1818,"mtime":1611500425364,"results":"122","hashOfConfig":"123"},{"size":1369,"mtime":1611500425335,"results":"124","hashOfConfig":"123"},{"size":1974,"mtime":1611500425339,"results":"125","hashOfConfig":"123"},{"size":1404,"mtime":1611500425349,"results":"126","hashOfConfig":"123"},{"size":2340,"mtime":1611500425352,"results":"127","hashOfConfig":"123"},{"size":1535,"mtime":1611500425361,"results":"128","hashOfConfig":"123"},{"size":2185,"mtime":1611500425363,"results":"129","hashOfConfig":"123"},{"size":1371,"mtime":1611500425338,"results":"130","hashOfConfig":"123"},{"size":1397,"mtime":1611500425372,"results":"131","hashOfConfig":"123"},{"size":2108,"mtime":1611500425375,"results":"132","hashOfConfig":"123"},{"size":772,"mtime":1611500425379,"results":"133","hashOfConfig":"123"},{"size":191,"mtime":1611500425385,"results":"134","hashOfConfig":"123"},{"size":1826,"mtime":1611500425324,"results":"135","hashOfConfig":"123"},{"size":5305,"mtime":1611500425369,"results":"136","hashOfConfig":"123"},{"size":3112,"mtime":1611500425321,"results":"137","hashOfConfig":"123"},{"size":2352,"mtime":1611500425323,"results":"138","hashOfConfig":"123"},{"size":5879,"mtime":1611500425331,"results":"139","hashOfConfig":"123"},{"size":4662,"mtime":1611500425354,"results":"140","hashOfConfig":"123"},{"size":4800,"mtime":1611500425342,"results":"141","hashOfConfig":"123"},{"size":5142,"mtime":1611500425335,"results":"142","hashOfConfig":"123"},{"size":6881,"mtime":1611500425378,"results":"143","hashOfConfig":"123"},{"size":3990,"mtime":1611500425366,"results":"144","hashOfConfig":"123"},{"size":9202,"mtime":1611500425331,"results":"145","hashOfConfig":"123"},{"size":5940,"mtime":1611500425343,"results":"146","hashOfConfig":"123"},{"size":1542,"mtime":1611500425351,"results":"147","hashOfConfig":"123"},{"size":768,"mtime":1611500425353,"results":"148","hashOfConfig":"123"},{"size":1548,"mtime":1611500425333,"results":"149","hashOfConfig":"123"},{"size":4985,"mtime":1611500425384,"results":"150","hashOfConfig":"123"},{"size":7275,"mtime":1611500425371,"results":"151","hashOfConfig":"123"},{"size":1866,"mtime":1611500425319,"results":"152","hashOfConfig":"123"},{"size":10113,"mtime":1611500425370,"results":"153","hashOfConfig":"123"},{"size":1395,"mtime":1611500425322,"results":"154","hashOfConfig":"123"},{"size":4190,"mtime":1611500425328,"results":"155","hashOfConfig":"123"},{"size":5198,"mtime":1611500425352,"results":"156","hashOfConfig":"123"},{"size":14880,"mtime":1611500425360,"results":"157","hashOfConfig":"123"},{"size":5204,"mtime":1611500425343,"results":"158","hashOfConfig":"123"},{"size":4821,"mtime":1611500425336,"results":"159","hashOfConfig":"123"},{"size":7748,"mtime":1611500425378,"results":"160","hashOfConfig":"123"},{"size":9095,"mtime":1611500425368,"results":"161","hashOfConfig":"123"},{"size":486,"mtime":1611500425330,"results":"162","hashOfConfig":"123"},{"size":1850,"mtime":1611500425319,"results":"163","hashOfConfig":"123"},{"size":2336,"mtime":1611500425337,"results":"164","hashOfConfig":"123"},{"size":756,"mtime":1611500425355,"results":"165","hashOfConfig":"123"},{"size":1539,"mtime":1611500425359,"results":"166","hashOfConfig":"123"},{"size":2278,"mtime":1611500425366,"results":"167","hashOfConfig":"123"},{"size":772,"mtime":1611500425380,"results":"168","hashOfConfig":"123"},{"size":2062,"mtime":1611500425384,"results":"169","hashOfConfig":"123"},{"size":363,"mtime":1611500425330,"results":"170","hashOfConfig":"123"},{"size":1371,"mtime":1611500425328,"results":"171","hashOfConfig":"123"},{"size":753,"mtime":1611500425324,"results":"172","hashOfConfig":"123"},{"size":5427,"mtime":1611500425347,"results":"173","hashOfConfig":"123"},{"size":5048,"mtime":1611500425355,"results":"174","hashOfConfig":"123"},{"size":4224,"mtime":1611500425341,"results":"175","hashOfConfig":"123"},{"size":1370,"mtime":1611500425370,"results":"176","hashOfConfig":"123"},{"size":2185,"mtime":1611500425376,"results":"177","hashOfConfig":"123"},{"size":1229,"mtime":1611500425329,"results":"178","hashOfConfig":"123"},{"size":3307,"mtime":1611500425375,"results":"179","hashOfConfig":"123"},{"size":5467,"mtime":1611500425365,"results":"180","hashOfConfig":"123"},{"size":121,"mtime":1611500425344,"results":"181","hashOfConfig":"123"},{"size":807,"mtime":1611500425345,"results":"182","hashOfConfig":"123"},{"size":2609,"mtime":1611500425354,"results":"183","hashOfConfig":"123"},{"size":1354,"mtime":1611500425346,"results":"184","hashOfConfig":"123"},{"size":770,"mtime":1611500425371,"results":"185","hashOfConfig":"123"},{"size":4607,"mtime":1611500425372,"results":"186","hashOfConfig":"123"},{"size":3256,"mtime":1611500425376,"results":"187","hashOfConfig":"123"},{"size":763,"mtime":1611500425321,"results":"188","hashOfConfig":"123"},{"size":1681,"mtime":1611500425320,"results":"189","hashOfConfig":"123"},{"size":6450,"mtime":1611500425349,"results":"190","hashOfConfig":"123"},{"size":4296,"mtime":1611500425350,"results":"191","hashOfConfig":"123"},{"size":9522,"mtime":1611500425368,"results":"192","hashOfConfig":"123"},{"size":343,"mtime":1611500425365,"results":"193","hashOfConfig":"123"},{"size":123,"mtime":1611500425383,"results":"194","hashOfConfig":"123"},{"size":3025,"mtime":1611500425382,"results":"195","hashOfConfig":"123"},{"size":772,"mtime":1611500425339,"results":"196","hashOfConfig":"123"},{"size":760,"mtime":1611500425343,"results":"197","hashOfConfig":"123"},{"size":768,"mtime":1611500425350,"results":"198","hashOfConfig":"123"},{"size":1364,"mtime":1611500425353,"results":"199","hashOfConfig":"123"},{"size":1280,"mtime":1611500425332,"results":"200","hashOfConfig":"123"},{"size":779,"mtime":1611500425376,"results":"201","hashOfConfig":"123"},{"size":4953,"mtime":1611500425346,"results":"202","hashOfConfig":"123"},{"size":2178,"mtime":1611500425321,"results":"203","hashOfConfig":"123"},{"size":4396,"mtime":1611500425357,"results":"204","hashOfConfig":"123"},{"size":3769,"mtime":1611500425353,"results":"205","hashOfConfig":"123"},{"size":2791,"mtime":1611500425338,"results":"206","hashOfConfig":"123"},{"size":4082,"mtime":1611500425381,"results":"207","hashOfConfig":"123"},{"size":1170,"mtime":1611500425320,"results":"208","hashOfConfig":"123"},{"size":1367,"mtime":1611500425368,"results":"209","hashOfConfig":"123"},{"size":8936,"mtime":1611500425372,"results":"210","hashOfConfig":"123"},{"size":2155,"mtime":1618126810356,"results":"211","hashOfConfig":"212"},{"size":2062,"mtime":1611500425384,"results":"213","hashOfConfig":"212"},{"size":1229,"mtime":1611500425329,"results":"214","hashOfConfig":"212"},{"size":5602,"mtime":1618074239766,"results":"215","hashOfConfig":"212"},{"size":955,"mtime":1617864642731,"results":"216","hashOfConfig":"212"},{"size":2489,"mtime":1617866765984,"results":"217","hashOfConfig":"212"},{"size":191,"mtime":1611500425385,"results":"218","hashOfConfig":"212"},{"size":3280,"mtime":1611500425330,"results":"219","hashOfConfig":"220"},{"size":440,"mtime":1611500425326,"results":"221","hashOfConfig":"212"},{"size":3749,"mtime":1618154601784,"results":"222","hashOfConfig":"212"},{"size":3865,"mtime":1618152476823,"results":"223","hashOfConfig":"212"},{"size":363,"mtime":1611500425330,"results":"224","hashOfConfig":"212"},{"size":5743,"mtime":1617887468606,"results":"225","hashOfConfig":"212"},{"size":6366,"mtime":1618006036763,"results":"226","hashOfConfig":"212"},{"size":1381,"mtime":1617889696511,"results":"227","hashOfConfig":"212"},{"size":9178,"mtime":1618157643085,"results":"228","hashOfConfig":"212"},{"size":6300,"mtime":1617887468618,"results":"229","hashOfConfig":"212"},{"size":8984,"mtime":1618157410801,"results":"230","hashOfConfig":"212"},{"size":1375,"mtime":1617887468598,"results":"231","hashOfConfig":"212"},{"size":1451,"mtime":1617887468590,"results":"232","hashOfConfig":"212"},{"size":771,"mtime":1617968759307,"results":"233","hashOfConfig":"212"},{"size":7260,"mtime":1618005162534,"results":"234","hashOfConfig":"212"},{"size":1547,"mtime":1617998051303,"results":"235","hashOfConfig":"212"},{"size":7412,"mtime":1618005872750,"results":"236","hashOfConfig":"212"},{"size":5639,"mtime":1618076711000,"results":"237","hashOfConfig":"212"},{"size":1010,"mtime":1618089680924,"results":"238","hashOfConfig":"212"},{"size":5781,"mtime":1618127573847,"results":"239","hashOfConfig":"212"},{"size":5753,"mtime":1618126810100,"results":"240","hashOfConfig":"212"},{"size":4107,"mtime":1618136958897,"results":"241","hashOfConfig":"212"},{"size":762,"mtime":1618074239696,"results":"242","hashOfConfig":"212"},{"size":771,"mtime":1617889696484,"results":"243","hashOfConfig":"212"},{"size":1553,"mtime":1618005162581,"results":"244","hashOfConfig":"212"},{"size":954,"mtime":1618126810199,"results":"245","hashOfConfig":"212"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ix4v6n",{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"270"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"270"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"256"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"256"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"261"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"270"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"270"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"435"},"gd9mwj",{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"435"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e1y56k",{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"435"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"435"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"435"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"435"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"435"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"435"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"435"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},"D:\\university-management\\frontend\\university-management\\src\\ui\\auth\\LoginPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\AddCoursePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\ShowFacultyPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\schedule\\EditScheduleItemPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\ShowSubjectPage.tsx",[],["508","509"],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\edit\\EditStudentPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\show\\ShowStudentPage.tsx",[],["510","511"],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\AddFacultyPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\group\\AddGradeToGroupPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\employee\\ShowEmployeePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\employee\\EmployeesPage.tsx",[],["512","513"],"D:\\university-management\\frontend\\university-management\\src\\ui\\theme-context.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\core\\subjectApi.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\Events.tsx",["514","515"],"D:\\university-management\\frontend\\university-management\\src\\core\\common.ts",[],"D:\\university-management\\frontend\\university-management\\src\\core\\groupApi.ts",["516","517","518","519"],"import { requestGet, requestPost, requestPut, requestDelete } from './common';\r\nimport { Course, mapCourse } from './courseApi';\r\nimport {mapAddress, mapStudent, mapUser, Student} from \"./user\";\r\n\r\nexport interface Group {\r\n    groupId: number;\r\n    course: Course;\r\n    name: string;\r\n}\r\n\r\nexport interface NewGroup {\r\n    courseId: number;\r\n    name: string;\r\n}\r\n\r\nexport interface EditedGroup {\r\n    courseId: number;\r\n    name: string;\r\n}\r\n\r\nexport function editedGroup(group: Group): EditedGroup {\r\n    return {\r\n        courseId: group.course.courseId,\r\n        name: group.name\r\n    };\r\n}\r\n\r\nexport function getGroups(): Promise<Group[]> {\r\n    return requestGet('/groups', (result) => result.map(mapGroup), (error) => []);\r\n}\r\n\r\nexport function getMyGroups(): Promise<Group[]> {\r\n    return requestGet(\r\n        '/me/student/groups',\r\n        (result) => result.map(mapGroup),\r\n        (error) => null\r\n    );\r\n}\r\n\r\nexport function getMyEmployeeGroups(): Promise<Group[]> {\r\n    return requestGet(\r\n        '/me/employee/groups',\r\n        (result) => result.map(mapGroup),\r\n        (error) => null\r\n    );\r\n}\r\n\r\nexport function getGroup(groupId: number): Promise<Group | null> {\r\n    return requestGet(`/groups/${groupId}`, (result) => mapGroup(result), (error) => null);\r\n}\r\n\r\nexport function addGroup(group: NewGroup): Promise<Group | null> {\r\n    return requestPost('/groups', group, (result) => mapGroup(result), (error) => null);\r\n}\r\n\r\nexport function updateGroup(groupId: number, group: EditedGroup): Promise<boolean> {\r\n    return requestPut(`/groups/${groupId}`, group, (result) => true, (error) => false);\r\n}\r\n\r\nexport function deleteGroup(groupId: number): Promise<boolean> {\r\n    return requestDelete(`/groups/${groupId}`, (result) => true, (error) => false);\r\n}\r\n\r\nexport function addEmployee(groupId: number, employeeId: number): Promise<boolean> {\r\n    return requestPost(`/groups/${groupId}/employees`, { employeeId }, (result) => true, (error) => false);\r\n}\r\n\r\nexport function addStudent(groupId: number, studentId: number): Promise<boolean> {\r\n    return requestPost(`/groups/${groupId}/students`, { studentId }, (result) => true, (error) => false);\r\n}\r\n\r\nexport function mapGroup(data: any): Group {\r\n    return ({\r\n        groupId: data.groupId,\r\n        course: mapCourse(data.course),\r\n        name: data.name\r\n    });\r\n}\r\n","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\building\\AddBuildingForm.tsx",["520","521","522","523"],"import {Box, Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as building from './../../../core/building';\r\nimport Title from '../../Title';\r\nimport * as validation from '../../validation';\r\n\r\ninterface AddBuildingFormProps {\r\n    classes: any;\r\n    setResult: (result: boolean | null) => void;\r\n}\r\n\r\nexport default function AddBuildingForm(props: AddBuildingFormProps) {\r\n    const { register, handleSubmit, getValues, errors, setError, reset } = useForm();\r\n    const onSubmit = (newBuilding: building.NewBuilding) => {\r\n        props.setResult(null);\r\n        building.addBuilding(newBuilding)\r\n        .then((result) => {\r\n            props.setResult(true);\r\n            reset();\r\n        })\r\n        .catch((error) => props.setResult(false));\r\n\r\n    }\r\n\r\n    return (\r\n        <Box width={1 / 4}>\r\n            <form\r\n                className={props.classes.form}\r\n                noValidate\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n                <Box style={{ marginBottom: 20 }}>\r\n                    <Title>Dodawanie budynku</Title>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Nazwa budynku\"\r\n                        type=\"text\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.name ? true : false}\r\n                        helperText={errors.name && errors.name.message}\r\n                    />\r\n\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Title>Adres</Title>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"address.street\"\r\n                        name=\"address.street\"\r\n                        label=\"Ulica\"\r\n                        type=\"text\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.address?.street ? true : false}\r\n                        helperText={errors.address?.street && errors.address?.street.message}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"address.houseNumber\"\r\n                        name=\"address.houseNumber\"\r\n                        label=\"Numer domu\"\r\n                        type=\"text\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.address?.houseNumber ? true : false}\r\n                        helperText={errors.address?.houseNumber && errors.address?.houseNumber.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"address.postcode\"\r\n                        name=\"address.postcode\"\r\n                        label=\"Kod pocztowy\"\r\n                        type=\"text\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.address?.postcode ? true : false}\r\n                        helperText={errors.address?.postcode && errors.address?.postcode.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"address.city\"\r\n                        name=\"address.city\"\r\n                        label=\"Miasto\"\r\n                        type=\"text\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.address?.city ? true : false}\r\n                        helperText={errors.address?.city && errors.address?.city.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"address.country\"\r\n                        name=\"address.country\"\r\n                        label=\"Państwo\"\r\n                        type=\"text\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.address?.country ? true : false}\r\n                        helperText={errors.address?.country && errors.address?.country.message}\r\n                    />\r\n                </Box>\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.classes.submit}\r\n                    >\r\n                        Dodaj\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Box>\r\n    );\r\n}","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\EditTermForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\EditGroupForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\Courses.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\calendar\\CalendarPage.tsx",["524"],"import { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport { Appointments, AppointmentTooltip, DateNavigator, Scheduler, Toolbar, WeekView } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { Console } from 'console';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport * as meApi from '../../../core/meApi';\r\nimport * as scheduleItemApi from '../../../core/scheduleItemApi';\r\nimport { ThemeContext } from '../../theme-context';\r\nimport * as eventApi from './../../../core/eventApi';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    todayCell: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.primary.main, 0.14),\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n        },\r\n    },\r\n    weekendCell: {\r\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        },\r\n    },\r\n    today: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n    },\r\n    weekend: {\r\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.06),\r\n    },\r\n}));\r\n\r\nfunction mapDay(day: string) {\r\n    switch (day) {\r\n        case 'Poniedziałek':\r\n            return 'MO';\r\n        case 'Wtorek':\r\n            return 'TU';\r\n        case 'Środa':\r\n            return 'WE';\r\n        case 'Czwartek':\r\n            return 'TH';\r\n        case 'Piątek':\r\n            return 'FR';\r\n        case 'Sobota':\r\n            return 'SA';\r\n        case 'Niedziela':\r\n            return 'SU';\r\n\r\n    }\r\n}\r\n\r\nfunction createScheduleDataFromEvent(event: eventApi.Event): ScheduleData {\r\n    const [year, month, day] = event.date.split('-');\r\n    const [hourFrom, minuteFrom] = event.timeFrom.split(':');\r\n    const [hourTo, minuteTo] = event.timeTo.split(':');\r\n    const startDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hourFrom), parseInt(minuteFrom));\r\n    const endDate = new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hourTo), parseInt(minuteTo));\r\n     return {\r\n        title: `${event.name} / ${event.room.building.name} / ${event.room.number}`,\r\n        rRule: undefined,\r\n        startDate,\r\n        endDate\r\n    }\r\n}\r\n\r\nfunction createScheduleData(scheduledItem: scheduleItemApi.ScheduleItem): ScheduleData {\r\n    const format = (n: string) => (`0${n}`).slice(-2);\r\n    const [yearTo, monthTo, dayTo] = scheduledItem.term.dateTo.split('-');\r\n    const until = `${yearTo}${format(monthTo)}${format(dayTo)}`;\r\n    const [yearFrom, monthFrom, dayFrom] = scheduledItem.term.dateFrom.split('-');\r\n    const [hourFrom, minuteFrom] = scheduledItem.timeFrom.split(':');\r\n    const [hourTo, minuteTo] = scheduledItem.timeTo.split(':');\r\n\r\n    const dayShift = scheduledItem.week === 'Parzysty' ? 7 : 0;\r\n    const startDate = new Date(parseInt(yearFrom), parseInt(monthFrom) - 1, parseInt(dayFrom) + dayShift, parseInt(hourFrom), parseInt(minuteFrom));\r\n    const endDate = new Date(parseInt(yearFrom), parseInt(monthFrom) - 1, parseInt(dayFrom) + dayShift, parseInt(hourTo), parseInt(minuteTo));\r\n    const interval = scheduledItem.week !== 'Parzysty i Nieparzysty' ? 2 : 1;\r\n\r\n    return {\r\n        title: `${scheduledItem.group.course.name} / ${scheduledItem.room.building.name} / ${scheduledItem.room.number}`,\r\n        rRule: `FREQ=WEEKLY;UNTIL=${until};WKST=MO;BYDAY=${mapDay(scheduledItem.day)};INTERVAL=${interval}`,\r\n        startDate: startDate,\r\n        endDate: endDate\r\n    }\r\n}\r\n\r\ninterface ScheduleData {\r\n    title: string,\r\n    rRule: string | undefined,\r\n    startDate: Date,\r\n    endDate: Date,\r\n}\r\n\r\nconst TimeTableCell = (props: any) => {\r\n    const classes = useStyles();\r\n    const { startDate } = props;\r\n    const date = new Date(startDate);\r\n\r\n    if (date.getDate() === new Date().getDate()) {\r\n        return <WeekView.TimeTableCell {...props} className={classes.todayCell} />;\r\n    } if (date.getDay() === 0 || date.getDay() === 6) {\r\n        return <WeekView.TimeTableCell {...props} className={classes.weekendCell} />;\r\n    } return <WeekView.TimeTableCell {...props} />;\r\n};\r\n\r\nconst DayScaleCell = (props: any) => {\r\n    const classes = useStyles();\r\n    const { startDate, today } = props;\r\n\r\n    if (today) {\r\n        return <WeekView.DayScaleCell {...props} className={classes.today} />;\r\n    } if (startDate.getDay() === 0 || startDate.getDay() === 6) {\r\n        return <WeekView.DayScaleCell {...props} className={classes.weekend} />;\r\n    } return <WeekView.DayScaleCell {...props} />;\r\n};\r\n\r\nexport default function CalendarPage() {\r\n    const context = useContext(ThemeContext);\r\n\r\n    const [scheduleData, setScheduleData] = useState<ScheduleData[]>([]);\r\n    console.log(scheduleData);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        Promise.all([\r\n            meApi.getMeScheduleItems(),\r\n            eventApi.getStudentEvents()\r\n        ]).then((result) => {\r\n            const [scheduleItems, events] = result;\r\n            if (mounted && scheduleItems && events) {\r\n                const data1 = scheduleItems.map(createScheduleData);\r\n                const data2 = events.map(createScheduleDataFromEvent);\r\n                const data3 = data1.concat(data2);\r\n                setScheduleData(data3);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={context.classes.container}>\r\n            <Grid container spacing={3}>\r\n                <Paper style={{ overflow: 'auto' }}>\r\n                    <Scheduler\r\n                        data={scheduleData}\r\n                        locale=\"pl-PL\"\r\n                        firstDayOfWeek={1}\r\n                    >\r\n                        <ViewState\r\n                            defaultCurrentDate={new Date()}\r\n                        />\r\n                        <Toolbar />\r\n                        <DateNavigator />\r\n                        <WeekView\r\n                            startDayHour={0}\r\n                            endDayHour={24}\r\n                            timeTableCellComponent={TimeTableCell}\r\n                            dayScaleCellComponent={DayScaleCell}\r\n                        />\r\n                        <Appointments />\r\n                        <AppointmentTooltip />\r\n                    </Scheduler>\r\n                </Paper>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\announcement\\AddAnouncementForm.tsx",["525"],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\AdminDashboard.tsx",["526","527","528","529","530"],"import { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { AccountBalance, Announcement, Business, Comment, DateRange, Event, EventSeat, Grade, Group, MeetingRoom, School, Subject } from '@material-ui/icons';\r\nimport People from '@material-ui/icons/People';\r\nimport React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Dashboard from '../Dashboard';\r\nimport AdminChangePasswordPage from './change-password/AdminChangePasswordPage';\r\nimport AddCoursePage from './course/AddCoursePage';\r\nimport CoursesPage from './course/CoursesPage';\r\nimport EditCoursePage from './course/EditCoursePage';\r\nimport ShowCoursePage from './course/ShowCoursePage';\r\nimport AddFacultyPage from './faculty/AddFacultyPage';\r\nimport EditFacultyPage from './faculty/EditFacultyPage';\r\nimport FacultiesPage from './faculty/FacultiesPage';\r\nimport ShowFacultyPage from './faculty/ShowFacultyPage';\r\nimport AddEmployeeToGroupPage from './group/AddEmployeeToGroupPage';\r\nimport AddGroupPage from './group/AddGroupPage';\r\nimport AddStudentToGroupPage from './group/AddStudentToGroupPage';\r\nimport EditGroupPage from './group/EditGroupPage';\r\nimport GroupsPage from './group/GroupsPage';\r\nimport ShowGroupPage from './group/ShowGroupPage';\r\nimport AdminHomePage from './home/AdminHomePage';\r\nimport AdminMePage from './me/AdminMePage';\r\nimport AddScheduleItemPage from './schedule/AddScheduleItemPage';\r\nimport EditScheduleItemPage from './schedule/EditScheduleItemPage';\r\nimport SchedulePage from './schedule/SchedulePage';\r\nimport AddSubjectPage from './subject/AddSubjectPage';\r\nimport EditSubjectPage from './subject/EditSubjectPage';\r\nimport ShowSubjectPage from './subject/ShowSubjectPage';\r\nimport SubjectsPage from './subject/SubjectsPage';\r\nimport AddTermPage from './term/AddTermPage';\r\nimport EditTermPage from './term/EditTermPage';\r\nimport ShowTermPage from './term/ShowTermPage';\r\nimport TermsPage from './term/TermsPage';\r\nimport AddAdminPage from './user/add/AddAdminPage';\r\nimport AddEmployeePage from './user/add/AddEmployeePage';\r\nimport AddStudentPage from './user/add/AddStudentPage';\r\nimport EditAdminPage from './user/edit/EditAdminPage';\r\nimport EditEmployeePage from './user/edit/EditEmployeePage';\r\nimport EditStudentPage from './user/edit/EditStudentPage';\r\nimport ShowAdminPage from './user/show/ShowAdminPage';\r\nimport ShowEmployeePage from './user/show/ShowEmployeePage';\r\nimport ShowStudentPage from './user/show/ShowStudentPage';\r\nimport AdminUsersPage from './user/UsersPage';\r\nimport ShowBuildingsPage from './building/BuildingsPage';\r\nimport AddBuildingPage from \"./building/AddBuildingPage\";\r\nimport ShowBuildingPage from \"./building/ShowBuildingPage\";\r\nimport EditBuildingPage from \"./building/EditBuildingPage\";\r\nimport ShowRoomsPage from \"./room/RoomsPage\";\r\nimport AddRoomPage from \"./room/AddRoomPage\";\r\nimport ShowRoomPage from \"./room/ShowRoomPage\";\r\nimport EditRoomPage from \"./room/EditRoomPage\";\r\n\r\nexport default function AdminDashboard() {\r\n  const menuItems = <React.Fragment>\r\n    <ListItem button component={Link} to=\"/admin/users\">\r\n      <ListItemIcon>\r\n        <People />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Użytkownicy\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/faculties\">\r\n      <ListItemIcon>\r\n        <AccountBalance />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Wydziały\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/subjects\">\r\n      <ListItemIcon>\r\n        <School />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Kierunki\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/courses\">\r\n      <ListItemIcon>\r\n        <Subject />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Przedmioty\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/groups\">\r\n      <ListItemIcon>\r\n        <Group />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Grupy\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/buildings\">\r\n      <ListItemIcon>\r\n        <Business />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Budynki\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/rooms\">\r\n      <ListItemIcon>\r\n        <MeetingRoom />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Pokoje\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/terms\">\r\n      <ListItemIcon>\r\n        <DateRange />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Semestry\" />\r\n    </ListItem>\r\n  </React.Fragment>;\r\n\r\n  return (\r\n    <Dashboard routePrefix=\"admin\" title=\"Panel Administratora\" menuItems={menuItems}>\r\n      <Route exact path=\"/admin/me\">\r\n        <AdminMePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/change-password\">\r\n        <AdminChangePasswordPage />\r\n      </Route>\r\n      <Route exact path=\"/admin\">\r\n        <AdminHomePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/users\">\r\n        <AdminUsersPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-admin\">\r\n        <AddAdminPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-admin/:userId\">\r\n        <ShowAdminPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-admin/:userId\">\r\n        <EditAdminPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-employee\">\r\n        <AddEmployeePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-employee/:userId\">\r\n        <ShowEmployeePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-employee/:userId\">\r\n        <EditEmployeePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-student\">\r\n        <AddStudentPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-student/:userId\">\r\n        <ShowStudentPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-student/:userId\">\r\n        <EditStudentPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/faculties\">\r\n        <FacultiesPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-faculty\">\r\n        <AddFacultyPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-faculty/:facultyId\">\r\n        <ShowFacultyPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-faculty/:facultyId\">\r\n        <EditFacultyPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/subjects\">\r\n        <SubjectsPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-subject\">\r\n        <AddSubjectPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-subject/:subjectId\">\r\n        <ShowSubjectPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-subject/:subjectId\">\r\n        <EditSubjectPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/courses\">\r\n        <CoursesPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-course\">\r\n        <AddCoursePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-course/:courseId\">\r\n        <ShowCoursePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-course/:courseId\">\r\n        <EditCoursePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/groups\">\r\n        <GroupsPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-group\">\r\n        <AddGroupPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-group/:groupId\">\r\n        <ShowGroupPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-group/:groupId/schedule\">\r\n        <SchedulePage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-group/:groupId/add-schedule-item\">\r\n        <AddScheduleItemPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-group/:groupId/edit-schedule-item/:scheduleItemId\">\r\n        <EditScheduleItemPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-group/:groupId\">\r\n        <EditGroupPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-employee-to-group/:groupId\">\r\n        <AddEmployeeToGroupPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-student-to-group/:groupId\">\r\n        <AddStudentToGroupPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/terms\">\r\n        <TermsPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/add-term\">\r\n        <AddTermPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/show-term/:termId\">\r\n        <ShowTermPage />\r\n      </Route>\r\n      <Route exact path=\"/admin/edit-term/:termId\">\r\n        <EditTermPage />\r\n      </Route>\r\n        <Route exact path=\"/admin/buildings\">\r\n            <ShowBuildingsPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/add-building\">\r\n            <AddBuildingPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/show-building/:buildingId\">\r\n            <ShowBuildingPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/edit-building/:buildingId\">\r\n            <EditBuildingPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/rooms\">\r\n            <ShowRoomsPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/add-room\">\r\n            <AddRoomPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/show-room/:roomId\">\r\n            <ShowRoomPage />\r\n        </Route>\r\n        <Route exact path=\"/admin/edit-room/:roomId\">\r\n            <EditRoomPage />\r\n        </Route>\r\n    </Dashboard>\r\n  );\r\n}\r\n","D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\ShowGroupPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\EditSubjectPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\SubjectsPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\building\\EditBuildingPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\subject\\ShowSubjectPage.tsx",["531","532","533","534"],"import { Table, TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {Link as RouterLink, useParams} from 'react-router-dom';\r\nimport * as course from '../../../core/courseApi';\r\nimport * as subject from '../../../core/subjectApi';\r\nimport Title from './../../Title';\r\nimport { ThemeContext } from './../../theme-context';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShowIcon from \"@material-ui/icons/Visibility\";\r\n\r\nexport default function ShowFacultyPage() {\r\n    const context = useContext(ThemeContext);\r\n    const classes = context.classes;\r\n    const params: any = useParams();\r\n\r\n\r\n\r\n    const subjectData = {\r\n        faculty: {\r\n            'Wydział': ''\r\n        },\r\n        subject: {\r\n            'Kierunek': ''\r\n        }\r\n    };\r\n\r\n\r\n    const [dataSubject, setDataSubject] = useState(subjectData);\r\n    const [dataCourses, setDataCourses] = useState<{ [key: number]: course.Course }>({});\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        subject.getSubject(params.subjectId).then((subject) => {\r\n            if (mounted && subject) {\r\n                setDataSubject({\r\n                    faculty: {\r\n                        'Wydział': subject.faculty.name\r\n                    },\r\n                    subject: {\r\n                        'Kierunek': subject.name\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        course.getCoursesBySubjectId(params.subjectId).then((course) => {\r\n            if (mounted) {\r\n                const courseById = course.reduce((courseById, course) =>\r\n                { return { ...courseById, [course.courseId]: course }; }, {});\r\n                setDataCourses(courseById);\r\n            }\r\n        })\r\n            .catch((error) => { });\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [params]);\r\n\r\n    const FacultyRows = (props: any) => (\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableBody>\r\n                {Object.keys(props.data).map((key) => (\r\n                    <TableRow key={key}>\r\n                        <TableCell variant=\"head\" width=\"50%\">{key}</TableCell>\r\n                        <TableCell>{props.data[key]}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n\r\n    const SubjectRows = (props: any) => (\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableBody>\r\n                {Object.keys(props.data).map((key) => (\r\n                    <TableRow key={key}>\r\n                        <TableCell variant=\"head\" width=\"50%\">{key}</TableCell>\r\n                        <TableCell>{props.data[key]}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n\r\n    const CoursesTable = (props:any) => (\r\n        <Table size=\"small\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Kierunek</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {Object.values(dataCourses)\r\n                    .sort((courseA, courseB) => courseA.name < courseB.name ? -1 : 1)\r\n                    .map((course) => (\r\n                    <TableRow key={course.courseId}>\r\n                        <TableCell>{course.name}</TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            {dataSubject.faculty && <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Title>Wydział</Title>\r\n                        {dataSubject.faculty && <FacultyRows data={dataSubject.faculty} />}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {dataSubject.subject && <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Title>Kierunek</Title>\r\n                        {dataSubject.subject && <FacultyRows data={dataSubject.subject} />}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>}\r\n\r\n\r\n\r\n            {dataCourses && <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Title>Przedmioty</Title>\r\n                        {dataCourses && <CoursesTable data={dataCourses} />}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>}\r\n        </Container >\r\n    );\r\n}","D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\ShowGradePage.tsx",["535"],"D:\\university-management\\frontend\\university-management\\src\\core\\announcementApi.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\EditGradeForm.tsx",["536","537","538","539"],"import { Box, FormControl, FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as course from \"../../../core/courseApi\";\r\nimport * as grade from \"../../../core/grade\";\r\nimport * as student from './../../../core/studentApi';\r\nimport * as userApi from './../../../core/user';\r\n\r\ninterface EditGradeFormProps {\r\n    classes: any;\r\n    setResult: (result: boolean | null) => void;\r\n}\r\n\r\nexport default function EditGradeForm(props: EditGradeFormProps) {\r\n    const params: any = useParams();\r\n    const groupId = params.groupId;\r\n    const gradeId = params.gradeId;\r\n    const courseId = Number(params.courseId);\r\n\r\n    const { register, handleSubmit, control, errors, reset } = useForm();\r\n\r\n    const [courseData, setCourseData] = React.useState<course.Course | null>();\r\n    const [students, setStudents] = React.useState<userApi.Student[]>([]);\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        student.getStudentsByGroupId(groupId)\r\n            .then((students) => {\r\n                if (mounted) {\r\n                    setStudents(students);\r\n                }\r\n            })\r\n            .catch((error) => { });\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        course.getCourseByGroupId(groupId)\r\n            .then((result) => {\r\n                const courseData = result;\r\n                if (mounted && courseData) {\r\n                    setCourseData(courseData);\r\n                }\r\n            })\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [reset, props]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        grade.getGradeById(gradeId)\r\n            .then((grade) => {\r\n                if (mounted && grade) {\r\n                    reset({\r\n                        studentId: grade.student.studentId,\r\n                        value: grade.value,\r\n                        name: grade.name,\r\n                        description: grade.description\r\n                    });\r\n                }\r\n            })\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [reset, props]);\r\n\r\n\r\n    const onSubmit = (editedGrade: grade.EditedGrade) => {\r\n        props.setResult(null);\r\n        grade.updateGrade(gradeId, editedGrade)\r\n            .then((updated) => {\r\n                if (updated) {\r\n                    reset(editedGrade);\r\n                    props.setResult(true);\r\n                } else {\r\n                    props.setResult(false);\r\n                }\r\n            })\r\n            .catch((error) => props.setResult(false));\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Box width={1 / 4}>\r\n            <form\r\n                className={props.classes.form}\r\n                noValidate\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n                <div>\r\n                    <FormControl fullWidth className={props.classes.formControl}>\r\n                        <InputLabel id=\"courseIdLabel\">Przedmiot</InputLabel>\r\n                        <Controller\r\n                            name=\"courseId\"\r\n                            control={control}\r\n                            defaultValue={courseId}\r\n                            rules={{\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'To pole jest wymagane'\r\n                                }\r\n                            }}\r\n                            as={\r\n                                <Select\r\n                                    disabled\r\n                                    labelId=\"courseIdLabel\"\r\n                                    id=\"courseId\"\r\n                                    error={errors.courseId ? true : false}\r\n                                >\r\n                                    <MenuItem key={courseData?.courseId} value={courseData?.courseId}>{courseData?.name}</MenuItem>\r\n                                </Select>\r\n                            }\r\n                        />\r\n                        <FormHelperText error={errors.courseId ? true : false}>{errors.courseId && errors.courseId.message}</FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n                <div>\r\n                    <FormControl fullWidth className={props.classes.formControl}>\r\n                        <InputLabel id=\"studentIdLabel\">Student</InputLabel>\r\n                        <Controller\r\n                            name=\"studentId\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            rules={{\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'To pole jest wymagane'\r\n                                }\r\n                            }}\r\n                            as={\r\n                                <Select\r\n                                    labelId=\"studentIdLabel\"\r\n                                    id=\"studentId\"\r\n                                    error={errors.studentId ? true : false}\r\n                                >\r\n                                    {students.map(student =>\r\n                                        <MenuItem key={student.studentId}\r\n                                            value={student.studentId}>{student.firstName + ' ' + student.lastName}</MenuItem>)}\r\n                                </Select>\r\n                            }\r\n                        />\r\n                        <FormHelperText error={errors.studentId ? true : false}>{errors.studentId\r\n                            && errors.studentId.message}</FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div>\r\n                    <FormControl fullWidth className={props.classes.formControl}>\r\n                        <InputLabel id=\"value\">Ocena</InputLabel>\r\n                        <Controller\r\n                            name=\"value\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            rules={{\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'To pole jest wymagane'\r\n                                }\r\n                            }}\r\n                            as={\r\n                                <Select\r\n                                    labelId=\"value\"\r\n                                    id=\"value\"\r\n                                    error={errors.value ? true : false}\r\n                                >\r\n                                    <MenuItem value={2}>2</MenuItem>\r\n                                    <MenuItem value={2.5}>2.5</MenuItem>\r\n                                    <MenuItem value={3}>3</MenuItem>\r\n                                    <MenuItem value={3.5}>3.5</MenuItem>\r\n                                    <MenuItem value={4}>4</MenuItem>\r\n                                    <MenuItem value={4.5}>4.5</MenuItem>\r\n                                    <MenuItem value={5}>5</MenuItem>\r\n                                </Select>\r\n                            }\r\n                        />\r\n                        <FormHelperText error={errors.value ? true : false}>{errors.value\r\n                            && errors.value.message}</FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div>\r\n                    <Controller\r\n                        name=\"name\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        }}\r\n                        as={\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"Nazwa\"\r\n                                type=\"text\"\r\n                                error={errors.name ? true : false}\r\n                                helperText={errors.name && errors.name.message}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <Controller\r\n                        name=\"description\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        }}\r\n                        as={\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"description\"\r\n                                label=\"Opis\"\r\n                                type=\"text\"\r\n                                multiline\r\n                                error={errors.description ? true : false}\r\n                                helperText={errors.description && errors.description.message}\r\n                            />}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.classes.submit}\r\n                    >\r\n                        Zapisz\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Box>\r\n    );\r\n}","D:\\university-management\\frontend\\university-management\\src\\core\\facultyApi.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\ChangePasswordForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\Subjects.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\edit\\EditEmployeeForm.tsx",["540"],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\Groups.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\EditCourseForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\announcement\\ShowAnnouncementPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\AddEventForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\HomePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\core\\auth.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\course\\ShowCoursePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\TermsPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\edit\\EditAdminPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\announcement\\AnnouncementsPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\faculty\\FacultiesPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\styles.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\Title.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\ChangePasswordPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\core\\studentApi.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\room\\Rooms.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\Terms.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\AddGroupForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\EditGradePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\student\\ShowStudentPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\ConfirmationDialog.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\employee\\Employees.tsx",["541","542","543","544","545"],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\EmployeeDashboard.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\home\\AdminHomePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\me\\AdminMePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\ShowTermPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\room\\AddRoomPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\grade\\GradesPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\group\\ShowGroupPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\student\\Students.tsx",["546","547","548","549","550"],"import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShowIcon from '@material-ui/icons/Visibility';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport * as auth from '../../../../core/auth';\r\nimport * as user from '../../../../core/user';\r\nimport * as student from '../../../../core/studentApi';\r\nimport ConfirmationDialog from '../../../ConfirmationDialog';\r\nimport Title from '../../../Title';\r\n\r\ninterface StudentProps {\r\n    classes: any;\r\n}\r\n\r\nexport default function Students(props: StudentProps) {\r\n    const [students, setStudents] = useState<{ [key: number]: user.Student }>({});\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        const token = auth.getToken();\r\n        if (token) {\r\n            student.getStudents()\r\n                .then((students) => {\r\n                    if (mounted) {\r\n                        const studentsById = students.reduce((studentsById, student) =>\r\n                        { return { ...studentsById, [student.studentId]: student }; }, {});\r\n                        setStudents(studentsById);\r\n                    }\r\n                })\r\n                .catch((error) => { });\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Studenci</Title>\r\n            <Grid container item justify=\"flex-end\">\r\n            </Grid>\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Imię</TableCell>\r\n                        <TableCell>Nazwisko</TableCell>\r\n                        <TableCell>E-mail</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {Object.values(students).sort((studentA, studentB) => studentA.user.userType < studentB.user.userType ? -1 : 1).map((student) => (\r\n                        <TableRow key={student.studentId}>\r\n                            <TableCell>{student.firstName}</TableCell>\r\n                            <TableCell>{student.lastName}</TableCell>\r\n                            <TableCell>{student.user.email}</TableCell>\r\n                            <TableCell>\r\n                                <IconButton aria-label=\"show\" component={RouterLink} to={`/employee/show-student/${student.user.userId}`}>\r\n                                    <ShowIcon />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </React.Fragment >\r\n    );\r\n}\r\n","D:\\university-management\\frontend\\university-management\\src\\core\\employeeApi.ts",[],"D:\\university-management\\frontend\\university-management\\src\\core\\building.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\schedule\\Schedule.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\subject\\AddSubjectForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\EditEventForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\auth\\LogoutPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\home\\StudentHomePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\grade\\ShowGradePage.tsx",["551","552","553"],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\FacultiesPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\group\\GroupsPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\schedule\\SchedulePage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\AddTermPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\building\\AddBuildingPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\user\\student\\StudentsPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\room\\EditRoomForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\core\\courseApi.ts",["554","555"],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\user\\add\\AddAdminForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\term\\AddTermForm.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\admin\\faculty\\EditFacultyForm.tsx",["556"],"D:\\university-management\\frontend\\university-management\\src\\ui\\student\\grade\\Grades.tsx",["557","558","559","560","561","562","563"],"D:\\university-management\\frontend\\university-management\\src\\core\\commentApi.ts",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\events\\AddEventPage.tsx",[],"D:\\university-management\\frontend\\university-management\\src\\ui\\employee\\group\\AddGradeToGroupForm.tsx",["564","565","566"],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\AdminDashboard.tsx",["567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"import { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { AccountBalance, Announcement, Business, Comment, DateRange, Event, EventSeat, Grade, Group, MeetingRoom, School, Subject } from '@material-ui/icons';\r\nimport People from '@material-ui/icons/People';\r\nimport React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Dashboard from '../Dashboard';\r\nimport AddStudentPage from './student/add/AddStudentPage';\r\nimport AddTeacherPage from './teacher/add/AddTeacherPage';\r\nimport AddStudentToTeacherPage from \"./student/add/AddStudentToTeacherPage\";\r\nimport StudentsPage from \"./student/show/StudentsPage\";\r\nimport TeachersPage from \"./teacher/show/TeachersPage\";\r\nimport EditStudentPage from \"./student/edit/EditStudentPage\";\r\nimport EditTeacherPage from \"./teacher/edit/EditTeacherPage\";\r\nimport SearchPage from \"./search/SearchPage\";\r\nimport TeachersByStudentPage from \"./student/show/TeachersByStudentPage\";\r\nimport StudentsByTeacherPage from \"./teacher/show/StudentsByTeacherPage\";\r\n\r\n\r\nexport default function AdminDashboard() {\r\n  return (\r\n    <Dashboard  title=\"Zadanie rekrutacyjne\" >\r\n      <Route exact path=\"/showStudents\">\r\n            <StudentsPage />\r\n      </Route>\r\n        <Route exact path=\"/showTeachers\">\r\n            <TeachersPage />\r\n        </Route>\r\n      <Route exact path=\"/addStudent\">\r\n        <AddStudentPage />\r\n      </Route>\r\n        <Route exact path=\"/addTeacher\">\r\n            <AddTeacherPage />\r\n        </Route>\r\n        <Route exact path=\"/addStudentToTeacher\">\r\n            <AddStudentToTeacherPage/>\r\n        </Route>\r\n        <Route exact path=\"/show-student/:studentId\">\r\n            <TeachersByStudentPage />\r\n        </Route>\r\n        <Route exact path=\"/edit-student/:studentId\">\r\n            <EditStudentPage />\r\n        </Route>\r\n        <Route exact path=\"/show-teacher/:teacherId\">\r\n            <StudentsByTeacherPage />\r\n        </Route>\r\n        <Route exact path=\"/edit-teacher/:teacherId\">\r\n            <EditTeacherPage />\r\n        </Route>\r\n        <Route exact path=\"/search\">\r\n            <SearchPage />\r\n        </Route>\r\n    </Dashboard>\r\n  );\r\n}\r\n",["584","585"],"D:\\Recruit Task\\frontend\\src\\ui\\styles.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\ConfirmationDialog.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\Dashboard.tsx",["586","587","588","589"],"import AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ExitToApp, Person, VpnKey } from '@material-ui/icons';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useStyles } from './styles';\r\nimport { ThemeContext } from './theme-context';\r\ninterface DashboardProps {\r\n  title: string;\r\n  // menuItems: any;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Dashboard(props: DashboardProps) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={RouterLink} to={'/'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Strona główna\" />\r\n          </ListItem>\r\n          <ListItem button component={RouterLink} to={'/showStudents'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Studenci\" />\r\n          </ListItem>\r\n          <ListItem button component={RouterLink} to={'/showTeachers'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Nauczyciele\" />\r\n          </ListItem>\r\n          <ListItem button component={RouterLink} to={'/addStudent'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dodaj studenta\" />\r\n          </ListItem>\r\n          <ListItem button component={RouterLink} to={'/addTeacher'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dodaj nauczyciela\" />\r\n          </ListItem>\r\n          <ListItem button component={RouterLink} to={'/addStudentToTeacher'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Przydziel studenta\"}  />\r\n          </ListItem>\r\n          <ListItem button component={RouterLink} to={'/search'}>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Wyszukiwarka\"}  />\r\n          </ListItem>\r\n          {/*{props.menuItems}*/}\r\n        </List>\r\n        {/*<List>*/}\r\n        {/*  <div>*/}\r\n        {/*    <ListSubheader inset>Użytkownik</ListSubheader>*/}\r\n        {/*    <ListItem button component={RouterLink} to={'/' + props.routePrefix + '/me'}>*/}\r\n        {/*      <ListItemIcon>*/}\r\n        {/*        <Person />*/}\r\n        {/*      </ListItemIcon>*/}\r\n        {/*      <ListItemText primary=\"Moje dane\" />*/}\r\n        {/*    </ListItem>*/}\r\n        {/*    <ListItem button component={RouterLink} to={'/' + props.routePrefix + '/change-password'}>*/}\r\n        {/*      <ListItemIcon>*/}\r\n        {/*        <VpnKey />*/}\r\n        {/*      </ListItemIcon>*/}\r\n        {/*      <ListItemText primary=\"Zmiana hasła\" />*/}\r\n        {/*    </ListItem>*/}\r\n        {/*    <ListItem button component={RouterLink} to=\"/logout\">*/}\r\n        {/*      <ListItemIcon>*/}\r\n        {/*        <ExitToApp />*/}\r\n        {/*      </ListItemIcon>*/}\r\n        {/*      <ListItemText primary=\"Wyloguj się\" />*/}\r\n        {/*    </ListItem>*/}\r\n        {/*  </div>*/}\r\n        {/*</List>*/}\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <ThemeContext.Provider value={{ classes }}>\r\n          {props.children}\r\n        </ThemeContext.Provider>\r\n      </main>\r\n    </div>\r\n  );\r\n}","D:\\Recruit Task\\frontend\\src\\index.tsx",[],"D:\\Recruit Task\\frontend\\src\\core\\common.ts",[],"D:\\Recruit Task\\frontend\\src\\ui\\theme-context.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\ShowUserPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\reportWebVitals.ts",[],"D:\\Recruit Task\\frontend\\src\\core\\teacher.ts",["590","591"],"D:\\Recruit Task\\frontend\\src\\core\\student.ts",["592","593"],"D:\\Recruit Task\\frontend\\src\\ui\\Title.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentToTeacherForm.tsx",["594","595","596"],"import * as student from '../../../../core/student';\r\nimport * as teacher from '../../../../core/teacher';\r\nimport {Box, FormControl, FormHelperText, InputLabel, MenuItem, Select, TableCell} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport TextField from \"@material-ui/core/TextField\";\r\ninterface AddStudentToTeacherFormProps {\r\n    classes: any;\r\n    setResult: (result: boolean | null) => void;\r\n}\r\n\r\nexport default function AddStudentToTeacherForm(props: AddStudentToTeacherFormProps) {\r\n    const {handleSubmit, control, errors, reset } = useForm();\r\n\r\n    const [students, setStudents] = React.useState<student.Student[]>([]);\r\n    const [teachers, setTeachers] = React.useState<teacher.Teacher[]>([]);\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        student.getStudents()\r\n            .then((students) => {\r\n                if (mounted) {\r\n                    setStudents(students);\r\n                }\r\n            })\r\n            .catch((error) => { });\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        teacher.getTeachers()\r\n            .then((teachers) => {\r\n                if (mounted) {\r\n                    setTeachers(teachers);\r\n                }\r\n            })\r\n            .catch((error) => { });\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const onSubmit = (data: {studentId: number, teacherId: number }) => {\r\n        props.setResult(null);\r\n        student.addStudentToTeacher(data.studentId,data.teacherId)\r\n            .then((result) => {\r\n                if (result) {\r\n                    props.setResult(true);\r\n                    reset();\r\n                } else {\r\n                    props.setResult(false);\r\n                }\r\n            })\r\n            .catch((error) => props.setResult(false));\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Box width={1 / 4}>\r\n            <form\r\n                className={props.classes.form}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n                <div>\r\n                    <FormControl fullWidth className={props.classes.formControl}>\r\n                        <InputLabel id=\"studentIdLabel\">Student</InputLabel>\r\n                        <Controller\r\n                            name=\"studentId\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            rules={{\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'To pole jest wymagane'\r\n                                }\r\n                            }}\r\n                            as={\r\n                                <Select\r\n                                    labelId=\"studentIdLabel\"\r\n                                    id=\"studentId\"\r\n                                    error={errors.studentId ? true : false}\r\n                                >\r\n                                    {students.map(student =>\r\n                                        <MenuItem key={student.studentId}\r\n                                                  value={student.studentId}>{student.firstName + ' ' + student.lastName}</MenuItem>)}\r\n                                </Select>\r\n                            }\r\n                        />\r\n                        <FormHelperText error={errors.studentId ? true : false}>{errors.studentId\r\n                        && errors.studentId.message}</FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div>\r\n                    <FormControl fullWidth className={props.classes.formControl}>\r\n                        <InputLabel id=\"teacherIdLabel\">Nauczyciel</InputLabel>\r\n                        <Controller\r\n                            name=\"teacherId\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            rules={{\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'To pole jest wymagane'\r\n                                }\r\n                            }}\r\n                            as={\r\n                                <Select\r\n                                    labelId=\"teacherIdLabel\"\r\n                                    id=\"teacherId\"\r\n                                    error={errors.teacherId ? true : false}\r\n                                >\r\n                                    {teachers.map(teacher =>\r\n                                        <MenuItem key={teacher.teacherId}\r\n                                                  value={teacher.teacherId}>{teacher.firstName + ' ' + teacher.lastName}</MenuItem>)}\r\n                                </Select>\r\n                            }\r\n                        />\r\n                        <FormHelperText error={errors.teacherId ? true : false}>{errors.teacherId\r\n                        && errors.teacherId.message}</FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.classes.submit}\r\n                    >\r\n                        Dodaj\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Box>\r\n    );\r\n}","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\add\\AddTeacherForm.tsx",["597","598","599"],"import { Box } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as teacher from '../../../../core/teacher';\r\nimport Title from '../../../Title';\r\nimport * as student from \"../../../../core/student\";\r\n\r\ninterface AddTeacherFormProps {\r\n    classes: any;\r\n    setResult: (result: boolean | null) => void;\r\n}\r\n\r\nexport function validateAge(value: number): boolean {\r\n    if (value <= 18) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function validateFirstName(value: string): boolean {\r\n    if (value.length<=2) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default function AddTeacherFormPage(props: AddTeacherFormProps) {\r\n    const { register, handleSubmit, getValues, errors, setError, reset } = useForm();\r\n    const onSubmit = (newTeacher: teacher.NewTeacher) => {\r\n        props.setResult(null);\r\n        teacher.teacherExists(newTeacher.email)\r\n            .then((result) => {\r\n                if (result === true) {\r\n                    setError('teacher.email', { message: 'Użytkownik o tym adresie e-mail już istnieje' })\r\n                } else {\r\n                    teacher.studentExists(newTeacher.email)\r\n                        .then((result2) => {\r\n                            if(result2===true){\r\n                                setError('teacher.email', {message: 'Użytkownik o tym adresie e-mail juz istenieje'})\r\n                            }else{\r\n                                teacher.addTeacher(newTeacher)\r\n                                    .then((result) => {\r\n                                        props.setResult(true);\r\n                                        reset();\r\n                                    })\r\n                                    .catch((error) => props.setResult(false));\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Box width={1 / 4}>\r\n            <form\r\n                className={props.classes.form}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n                <Box style={{ marginBottom: 20 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"Imię\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            },\r\n                            validate: {\r\n                                value: (value: string) => validateFirstName(value) || 'Zbyt krótkie imię'\r\n                            }\r\n                        })}\r\n                        error={errors.firstName ? true : false}\r\n                        helperText={errors.firstName && errors.firstName.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Nazwisko\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.lastName ? true : false}\r\n                        helperText={errors.lastName && errors.lastName.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"age\"\r\n                        name=\"age\"\r\n                        label=\"Wiek\"\r\n                        type=\"number\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            },\r\n                            validate: {\r\n                                value: (value: number) => validateAge(value) || 'Nie jesteś pełnoletni'\r\n                            }\r\n                        })}\r\n                        error={errors.age ? true : false}\r\n                        helperText={errors.age && errors.age.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Adres e-mail\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            },\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                message: 'Nieprawidłowy adres e-mail'\r\n                            }\r\n                        })}\r\n                        error={errors.email ? true : false}\r\n                        helperText={errors.email && errors.email.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"course\"\r\n                        name=\"course\"\r\n                        label=\"Przedmiot\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.course ? true : false}\r\n                        helperText={errors.course && errors.course.message}\r\n                    />\r\n\r\n                </Box>\r\n\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.classes.submit}\r\n                    >\r\n                        Dodaj\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Box>\r\n    );\r\n}","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\add\\AddTeacherPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\Teachers.tsx",["600","601","602","603","604","605","606"],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentForm.tsx",["607","608"],"import { Box } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as student from '../../../../core/student';\r\nimport Title from '../../../Title';\r\n\r\ninterface AddStudentFormProps {\r\n    classes: any;\r\n    setResult: (result: boolean | null) => void;\r\n}\r\n\r\nexport function validateAge(value: number): boolean {\r\n    if (value <= 18) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function validateFirstName(value: string): boolean {\r\n    if (value.length<=2) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default function AddStudentFormPage(props: AddStudentFormProps) {\r\n    const { register, handleSubmit, getValues, errors, setError, reset } = useForm();\r\n    const onSubmit = (newStudent: student.NewStudent) => {\r\n        props.setResult(null);\r\n        student.studentExists(newStudent.email)\r\n            .then((result) => {\r\n                if (result === true) {\r\n                    setError('email', { message: 'Użytkownik o tym adresie e-mail już istnieje' })\r\n                } else {\r\n                    student.teacherExists(newStudent.email)\r\n                        .then((result2) => {\r\n                            if(result2===true){\r\n                                setError('email', {message: 'Użytkownik o tym adresie e-mail juz istenieje'})\r\n                            }else{\r\n                                student.addStudent(newStudent)\r\n                                    .then((result) => {\r\n                                        props.setResult(true);\r\n                                        reset();\r\n                                    })\r\n                                    .catch((error) => props.setResult(false));\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Box width={1 / 4}>\r\n            <form\r\n                className={props.classes.form}\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n                <Box style={{ marginBottom: 20 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"Imię\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            },\r\n                            validate: {\r\n                                value: (value: string) => validateFirstName(value) || 'Zbyt krótkie imię'\r\n                            }\r\n                        })}\r\n                        error={errors.firstName ? true : false}\r\n                        helperText={errors.firstName && errors.firstName.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Nazwisko\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.lastName ? true : false}\r\n                        helperText={errors.lastName && errors.lastName.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"age\"\r\n                        name=\"age\"\r\n                        label=\"Wiek\"\r\n                        type=\"number\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            },\r\n                            validate: {\r\n                                value: (value: number) => validateAge(value) || 'Nie jesteś pełnoletni'\r\n                            }\r\n                        })}\r\n                        error={errors.age ? true : false}\r\n                        helperText={errors.age && errors.age.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Adres e-mail\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            },\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                message: 'Nieprawidłowy adres e-mail'\r\n                            }\r\n                        })}\r\n                        error={errors.email ? true : false}\r\n                        helperText={errors.email && errors.email.message}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"subject\"\r\n                        name=\"subject\"\r\n                        label=\"Kierunek\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'To pole jest wymagane'\r\n                            }\r\n                        })}\r\n                        error={errors.subject ? true : false}\r\n                        helperText={errors.subject && errors.subject.message}\r\n                    />\r\n\r\n                </Box>\r\n\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.classes.submit}\r\n                    >\r\n                        Dodaj\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Box>\r\n    );\r\n}","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\Students.tsx",["609","610","611","612","613"],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\add\\AddStudentToTeacherPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\StudentsPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\edit\\EditStudentForm.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\edit\\EditStudentPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\edit\\EditTeacherForm.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\search\\Search.tsx",["614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642"],"import IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShowIcon from '@material-ui/icons/Visibility';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport * as student from '../../../core/student';\r\nimport * as teacher from '../../../core/teacher';\r\nimport ConfirmationDialog from '../../ConfirmationDialog';\r\nimport Title from '../../Title';\r\nimport {FormControl, FormHelperText, InputLabel, MenuItem, Select, TableSortLabel} from \"@material-ui/core\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport classes from \"*.module.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {validateFirstName} from \"../student/add/AddStudentForm\";\r\n\r\n\r\ninterface SearchProps {\r\n    classes: any;\r\n}\r\n\r\nexport default function Search(props: SearchProps) {\r\n\r\n\r\n    const { register, handleSubmit, control, errors, reset } = useForm();\r\n\r\n    var [students, setStudents] = useState<student.Student[]>([]);\r\n    var [teachers, setTeachers] = useState<teacher.Teacher[]>([]);\r\n\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const [studentId, setStudentId] = useState<number | null>(null)\r\n    const [studentDeleted, setStudentDeleted] = useState<boolean | null>(null);\r\n\r\n    // const [state, setState] = React.useState<{ filter: string}>({\r\n    //     filter: 'nazwisko malejaco',\r\n    // });\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        // const name = event.target.name as keyof typeof state;\r\n        console.log(\"zmiania\", event.target.value)\r\n        if(event.target.value==\"\"){\r\n            setStudents([]);\r\n            setTeachers([]);\r\n        }\r\n        else {\r\n            student.searchStudent(event.target.value)\r\n                .then((students1) => {\r\n                    setStudents(students1)\r\n                    console.log(students)\r\n                })\r\n                .catch((error) => {\r\n                });\r\n            teacher.searchTeacher(event.target.value)\r\n                .then((teacher1) => {\r\n                    setTeachers(teacher1)\r\n                    console.log(students)\r\n                })\r\n                .catch((error) => { });\r\n\r\n            // return () => {\r\n            //     console.log(students);\r\n            //     mounted = false\r\n            // }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Wyszukiwarka</Title>\r\n            <form\r\n                className={props.classes.form}\r\n                noValidate\r\n            >\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"search\"\r\n                    name=\"search\"\r\n                    label=\"Wyszukaj studenta lub nauczyciela\"\r\n                    onChange={handleChange}\r\n                />\r\n            </form>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n\r\n            <Title>Studenci</Title>\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Imię\r\n                        </TableCell>\r\n                        <TableCell>Nazwisko</TableCell>\r\n                        <TableCell>Wiek</TableCell>\r\n                        <TableCell>E-mail</TableCell>\r\n                        <TableCell>Kierunek</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {Object.values(students).map((student) => (\r\n                        <TableRow key={student.studentId}>\r\n                            <TableCell>{student.firstName}</TableCell>\r\n                            <TableCell>{student.lastName}</TableCell>\r\n                            <TableCell>{student.age}</TableCell>\r\n                            <TableCell>{student.email}</TableCell>\r\n                            <TableCell>{student.subject}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Title>Nauczyciele</Title>\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Imię</TableCell>\r\n                        <TableCell>Nazwisko</TableCell>\r\n                        <TableCell>Wiek</TableCell>\r\n                        <TableCell>E-mail</TableCell>\r\n                        <TableCell>Przedmiot</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {Object.values(teachers).map((teacher) => (\r\n                        <TableRow key={teacher.teacherId}>\r\n                            <TableCell>{teacher.firstName}</TableCell>\r\n                            <TableCell>{teacher.lastName}</TableCell>\r\n                            <TableCell>{teacher.age}</TableCell>\r\n                            <TableCell>{teacher.email}</TableCell>\r\n                            <TableCell>{teacher.course}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </React.Fragment >\r\n    );\r\n}\r\n","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\TeachersByStudentPage.tsx",["643"],"import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useContext } from 'react';\r\nimport TeachersByStudent from './TeachersByStudent';\r\nimport { ThemeContext } from '../../../theme-context';\r\nimport {useParams} from \"react-router-dom\";\r\nimport EditStudentForm from \"../edit/EditStudentForm\";\r\n\r\nexport default function StudentsPage() {\r\n    const context = useContext(ThemeContext);\r\n    const params: any = useParams();\r\n    const studentId: number = params.studentId;\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={context.classes.container}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={context.classes.paper}>\r\n                        <TeachersByStudent classes={context.classes} studentId={studentId} />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}","D:\\Recruit Task\\frontend\\src\\ui\\admin\\student\\show\\TeachersByStudent.tsx",["644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663"],"import IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShowIcon from '@material-ui/icons/Visibility';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport * as teacher from '../../../../core/teacher';\r\nimport * as student from '../../../../core/student';\r\nimport ConfirmationDialog from '../../../ConfirmationDialog';\r\nimport Title from '../../../Title';\r\nimport {FormControl, FormHelperText, InputLabel, MenuItem, Select, TableSortLabel} from \"@material-ui/core\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport classes from \"*.module.css\";\r\n\r\n\r\ninterface TeachersByStudentProps {\r\n    classes: any;\r\n    studentId: number;\r\n}\r\n\r\n\r\nexport default function TeachersByStudent(props: TeachersByStudentProps) {\r\n\r\n\r\n    const { register, handleSubmit, control, errors, reset } = useForm();\r\n\r\n    var [teachers, setTeachers] = useState<teacher.Teacher[]>([]);\r\n    var [student1, setStudent1] = useState<student.Student>();\r\n    // var [students, setStudents] = useState<{ [key: number]: student.Student }>({});\r\n\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const [teacherId, setTeacherId] = useState<number | null>(null)\r\n    const [teacherDeleted, setTeacherDeleted] = useState<boolean | null>(null);\r\n\r\n\r\n    const handleOk = () => {\r\n        setDeleteDialogOpen(false);\r\n        setTeacherDeleted(null);\r\n        if (teacherId !== null) {\r\n            teacher.deleteStudentTeacherConnection(props.studentId,teacherId)\r\n                .then((result) => {\r\n                    if(result==true){\r\n                    teacher.getTeachersByStudentId(props.studentId)\r\n                        .then((teachers1) => {\r\n                            setTeachers(teachers1)\r\n                        })\r\n                        .catch((error) => {\r\n                        });\r\n                    // setTeachers(teachers1)\r\n                }})\r\n                .catch((error) => {\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setDeleteDialogOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if(teachers.length==0) {\r\n            teacher.getTeachersByStudentId(props.studentId)\r\n                .then((teachers1) => {\r\n                    // if (mounted) {\r\n                    //     const studentsById = students.reduce((studentsById, student) => { return {\r\n                    //         ...studentsById, [student.studentId]: student }; }, {});\r\n                    //     setStudents(studentsById);\r\n                    // }\r\n                    setTeachers(teachers1)\r\n                })\r\n                .catch((error) => {\r\n                });\r\n            student.getStudent(props.studentId)\r\n                .then((student2) =>{\r\n                    if(student2!=null) {\r\n                        setStudent1(student2)\r\n                    }\r\n                })\r\n        }\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ConfirmationDialog\r\n                message=\"Czy na pewno usunąć\"\r\n                open={deleteDialogOpen}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n            />\r\n            <Title>Nauczyciele studenta {student1?.firstName} {student1?.lastName}</Title>\r\n\r\n            <div style={{ marginBottom: 10 }}>\r\n                {teacherDeleted !== null && teacherDeleted === true && <Alert severity=\"success\">Powiązanie studenta i nauczyciela zostalo usunięte.</Alert>}\r\n                {teacherDeleted !== null && teacherDeleted === false && <Alert severity=\"error\">Wystąpił błąd. Spróbuj ponownie.</Alert>}\r\n            </div>\r\n\r\n\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Imię\r\n                        </TableCell>\r\n                        <TableCell>Nazwisko</TableCell>\r\n                        <TableCell>Wiek</TableCell>\r\n                        <TableCell>E-mail</TableCell>\r\n                        <TableCell>Przedmiot</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {Object.values(teachers).map((teacher) => (\r\n                        <TableRow key={teacher.teacherId}>\r\n                            <TableCell>{teacher.firstName}</TableCell>\r\n                            <TableCell>{teacher.lastName}</TableCell>\r\n                            <TableCell>{teacher.age}</TableCell>\r\n                            <TableCell>{teacher.email}</TableCell>\r\n                            <TableCell>{teacher.course}</TableCell>\r\n                            <TableCell>\r\n                                <IconButton aria-label=\"delete\" onClick={() => {\r\n                                    setTeacherId(teacher.teacherId);\r\n                                    setDeleteDialogOpen(true);\r\n                                }}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </React.Fragment >\r\n    );\r\n}\r\n","D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\StudentsByTeacher.tsx",["664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683"],"import IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShowIcon from '@material-ui/icons/Visibility';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport * as student from '../../../../core/student';\r\nimport ConfirmationDialog from '../../../ConfirmationDialog';\r\nimport Title from '../../../Title';\r\nimport {FormControl, FormHelperText, InputLabel, MenuItem, Select, TableSortLabel} from \"@material-ui/core\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport classes from \"*.module.css\";\r\n\r\n\r\ninterface StudentsByTeacherProps {\r\n    classes: any;\r\n    teacherId: number;\r\n}\r\n\r\n\r\nexport default function StudentsByTeacher(props: StudentsByTeacherProps) {\r\n\r\n\r\n    const { register, handleSubmit, control, errors, reset } = useForm();\r\n\r\n    var [students, setStudents] = useState<student.Student[]>([]);\r\n    // var [students, setStudents] = useState<{ [key: number]: student.Student }>({});\r\n\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const [studentId, setStudentId] = useState<number | null>(null)\r\n    const [studentDeleted, setStudentDeleted] = useState<boolean | null>(null);\r\n\r\n\r\n    const handleOk = () => {\r\n        setDeleteDialogOpen(false);\r\n        setStudentDeleted(null);\r\n        if (studentId !== null) {\r\n            student.deleteStudentTeacherConnection(props.teacherId,studentId)\r\n                .then((result) => {\r\n                    if(result==true){\r\n                    student.getStudentsByTeacherId(props.teacherId)\r\n                        .then((students1) => {\r\n                            // if (mounted) {\r\n                            //     const studentsById = students.reduce((studentsById, student) => { return {\r\n                            //         ...studentsById, [student.studentId]: student }; }, {});\r\n                            //     setStudents(studentsById);\r\n                            // }\r\n                            setStudents(students1)\r\n                        })\r\n                        .catch((error) => {\r\n                        });\r\n                    // setTeachers(teachers1)\r\n                }})\r\n                .catch((error) => {\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setDeleteDialogOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if(students.length==0) {\r\n            student.getStudentsByTeacherId(props.teacherId)\r\n                .then((students1) => {\r\n                    // if (mounted) {\r\n                    //     const studentsById = students.reduce((studentsById, student) => { return {\r\n                    //         ...studentsById, [student.studentId]: student }; }, {});\r\n                    //     setStudents(studentsById);\r\n                    // }\r\n                    setStudents(students1)\r\n                })\r\n                .catch((error) => {\r\n                });\r\n        }\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ConfirmationDialog\r\n                message=\"Czy na pewno usunąć\"\r\n                open={deleteDialogOpen}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n            />\r\n            <Title>Nauczyciele studenta</Title>\r\n\r\n            <div style={{ marginBottom: 10 }}>\r\n                {studentDeleted !== null && studentDeleted === true && <Alert severity=\"success\">Powiązanie studenta i nauczyciela zostalo usunięte.</Alert>}\r\n                {studentDeleted !== null && studentDeleted === false && <Alert severity=\"error\">Wystąpił błąd. Spróbuj ponownie.</Alert>}\r\n            </div>\r\n\r\n\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Imię\r\n                        </TableCell>\r\n                        <TableCell>Nazwisko</TableCell>\r\n                        <TableCell>Wiek</TableCell>\r\n                        <TableCell>E-mail</TableCell>\r\n                        <TableCell>Kierunek</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {Object.values(students).map((student) => (\r\n                        <TableRow key={student.studentId}>\r\n                            <TableCell>{student.firstName}</TableCell>\r\n                            <TableCell>{student.lastName}</TableCell>\r\n                            <TableCell>{student.age}</TableCell>\r\n                            <TableCell>{student.email}</TableCell>\r\n                            <TableCell>{student.subject}</TableCell>\r\n                            <TableCell>\r\n                                <IconButton aria-label=\"delete\" onClick={() => {\r\n                                    setStudentId(student.studentId);\r\n                                    setDeleteDialogOpen(true);\r\n                                }}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </React.Fragment >\r\n    );\r\n}\r\n","D:\\Recruit Task\\frontend\\src\\ui\\Pagination.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\search\\SearchPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\TeachersPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\edit\\EditTeacherPage.tsx",[],"D:\\Recruit Task\\frontend\\src\\ui\\admin\\teacher\\show\\StudentsByTeacherPage.tsx",[],{"ruleId":"684","replacedBy":"685"},{"ruleId":"686","replacedBy":"687"},{"ruleId":"684","replacedBy":"688"},{"ruleId":"686","replacedBy":"689"},{"ruleId":"684","replacedBy":"690"},{"ruleId":"686","replacedBy":"691"},{"ruleId":"692","severity":1,"message":"693","line":11,"column":8,"nodeType":"694","messageId":"695","endLine":11,"endColumn":16},{"ruleId":"692","severity":1,"message":"696","line":25,"column":11,"nodeType":"694","messageId":"695","endLine":25,"endColumn":18},{"ruleId":"692","severity":1,"message":"697","line":3,"column":9,"nodeType":"694","messageId":"695","endLine":3,"endColumn":19},{"ruleId":"692","severity":1,"message":"698","line":3,"column":21,"nodeType":"694","messageId":"695","endLine":3,"endColumn":31},{"ruleId":"692","severity":1,"message":"699","line":3,"column":33,"nodeType":"694","messageId":"695","endLine":3,"endColumn":40},{"ruleId":"692","severity":1,"message":"700","line":3,"column":42,"nodeType":"694","messageId":"695","endLine":3,"endColumn":49},{"ruleId":"692","severity":1,"message":"701","line":1,"column":14,"nodeType":"694","messageId":"695","endLine":1,"endColumn":18},{"ruleId":"692","severity":1,"message":"702","line":8,"column":13,"nodeType":"694","messageId":"695","endLine":8,"endColumn":23},{"ruleId":"692","severity":1,"message":"703","line":16,"column":37,"nodeType":"694","messageId":"695","endLine":16,"endColumn":46},{"ruleId":"692","severity":1,"message":"704","line":16,"column":56,"nodeType":"694","messageId":"695","endLine":16,"endColumn":64},{"ruleId":"692","severity":1,"message":"705","line":6,"column":10,"nodeType":"694","messageId":"695","endLine":6,"endColumn":17},{"ruleId":"692","severity":1,"message":"706","line":14,"column":37,"nodeType":"694","messageId":"695","endLine":14,"endColumn":44},{"ruleId":"692","severity":1,"message":"707","line":2,"column":26,"nodeType":"694","messageId":"695","endLine":2,"endColumn":38},{"ruleId":"692","severity":1,"message":"708","line":2,"column":50,"nodeType":"694","messageId":"695","endLine":2,"endColumn":57},{"ruleId":"692","severity":1,"message":"709","line":2,"column":70,"nodeType":"694","messageId":"695","endLine":2,"endColumn":75},{"ruleId":"692","severity":1,"message":"710","line":2,"column":77,"nodeType":"694","messageId":"695","endLine":2,"endColumn":86},{"ruleId":"692","severity":1,"message":"711","line":2,"column":88,"nodeType":"694","messageId":"695","endLine":2,"endColumn":93},{"ruleId":"692","severity":1,"message":"712","line":6,"column":17,"nodeType":"694","messageId":"695","endLine":6,"endColumn":27},{"ruleId":"692","severity":1,"message":"713","line":12,"column":8,"nodeType":"694","messageId":"695","endLine":12,"endColumn":18},{"ruleId":"692","severity":1,"message":"693","line":13,"column":8,"nodeType":"694","messageId":"695","endLine":13,"endColumn":16},{"ruleId":"692","severity":1,"message":"714","line":76,"column":11,"nodeType":"694","messageId":"695","endLine":76,"endColumn":22},{"ruleId":"692","severity":1,"message":"715","line":9,"column":17,"nodeType":"694","messageId":"695","endLine":9,"endColumn":21},{"ruleId":"692","severity":1,"message":"716","line":23,"column":13,"nodeType":"694","messageId":"695","endLine":23,"endColumn":21},{"ruleId":"717","severity":1,"message":"718","line":40,"column":8,"nodeType":"719","endLine":40,"endColumn":10,"suggestions":"720"},{"ruleId":"717","severity":1,"message":"718","line":54,"column":8,"nodeType":"719","endLine":54,"endColumn":22,"suggestions":"721"},{"ruleId":"717","severity":1,"message":"722","line":74,"column":8,"nodeType":"719","endLine":74,"endColumn":22,"suggestions":"723"},{"ruleId":"692","severity":1,"message":"703","line":17,"column":54,"nodeType":"694","messageId":"695","endLine":17,"endColumn":63},{"ruleId":"692","severity":1,"message":"724","line":1,"column":8,"nodeType":"694","messageId":"695","endLine":1,"endColumn":14},{"ruleId":"692","severity":1,"message":"725","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":18},{"ruleId":"692","severity":1,"message":"726","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":16},{"ruleId":"692","severity":1,"message":"727","line":12,"column":8,"nodeType":"694","messageId":"695","endLine":12,"endColumn":13},{"ruleId":"692","severity":1,"message":"728","line":18,"column":8,"nodeType":"694","messageId":"695","endLine":18,"endColumn":26},{"ruleId":"692","severity":1,"message":"724","line":1,"column":8,"nodeType":"694","messageId":"695","endLine":1,"endColumn":14},{"ruleId":"692","severity":1,"message":"725","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":18},{"ruleId":"692","severity":1,"message":"726","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":16},{"ruleId":"692","severity":1,"message":"727","line":12,"column":8,"nodeType":"694","messageId":"695","endLine":12,"endColumn":13},{"ruleId":"692","severity":1,"message":"728","line":18,"column":8,"nodeType":"694","messageId":"695","endLine":18,"endColumn":26},{"ruleId":"692","severity":1,"message":"712","line":2,"column":17,"nodeType":"694","messageId":"695","endLine":2,"endColumn":27},{"ruleId":"692","severity":1,"message":"724","line":9,"column":9,"nodeType":"694","messageId":"695","endLine":9,"endColumn":15},{"ruleId":"692","severity":1,"message":"715","line":9,"column":17,"nodeType":"694","messageId":"695","endLine":9,"endColumn":21},{"ruleId":"692","severity":1,"message":"729","line":3,"column":9,"nodeType":"694","messageId":"695","endLine":3,"endColumn":14},{"ruleId":"692","severity":1,"message":"730","line":3,"column":16,"nodeType":"694","messageId":"695","endLine":3,"endColumn":24},{"ruleId":"692","severity":1,"message":"704","line":15,"column":44,"nodeType":"694","messageId":"695","endLine":15,"endColumn":52},{"ruleId":"692","severity":1,"message":"724","line":1,"column":8,"nodeType":"694","messageId":"695","endLine":1,"endColumn":14},{"ruleId":"692","severity":1,"message":"713","line":3,"column":8,"nodeType":"694","messageId":"695","endLine":3,"endColumn":18},{"ruleId":"692","severity":1,"message":"725","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":18},{"ruleId":"692","severity":1,"message":"726","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":16},{"ruleId":"692","severity":1,"message":"693","line":11,"column":8,"nodeType":"694","messageId":"695","endLine":11,"endColumn":16},{"ruleId":"692","severity":1,"message":"727","line":12,"column":8,"nodeType":"694","messageId":"695","endLine":12,"endColumn":13},{"ruleId":"692","severity":1,"message":"728","line":18,"column":8,"nodeType":"694","messageId":"695","endLine":18,"endColumn":26},{"ruleId":"692","severity":1,"message":"731","line":1,"column":73,"nodeType":"694","messageId":"695","endLine":1,"endColumn":82},{"ruleId":"717","severity":1,"message":"718","line":39,"column":8,"nodeType":"719","endLine":39,"endColumn":10,"suggestions":"732"},{"ruleId":"717","severity":1,"message":"718","line":53,"column":8,"nodeType":"719","endLine":53,"endColumn":22,"suggestions":"733"},{"ruleId":"692","severity":1,"message":"734","line":1,"column":10,"nodeType":"694","messageId":"695","endLine":1,"endColumn":18},{"ruleId":"692","severity":1,"message":"735","line":1,"column":20,"nodeType":"694","messageId":"695","endLine":1,"endColumn":32},{"ruleId":"692","severity":1,"message":"736","line":1,"column":34,"nodeType":"694","messageId":"695","endLine":1,"endColumn":46},{"ruleId":"692","severity":1,"message":"737","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":24},{"ruleId":"692","severity":1,"message":"707","line":2,"column":26,"nodeType":"694","messageId":"695","endLine":2,"endColumn":38},{"ruleId":"692","severity":1,"message":"738","line":2,"column":40,"nodeType":"694","messageId":"695","endLine":2,"endColumn":48},{"ruleId":"692","severity":1,"message":"708","line":2,"column":50,"nodeType":"694","messageId":"695","endLine":2,"endColumn":57},{"ruleId":"692","severity":1,"message":"739","line":2,"column":59,"nodeType":"694","messageId":"695","endLine":2,"endColumn":68},{"ruleId":"692","severity":1,"message":"709","line":2,"column":70,"nodeType":"694","messageId":"695","endLine":2,"endColumn":75},{"ruleId":"692","severity":1,"message":"710","line":2,"column":77,"nodeType":"694","messageId":"695","endLine":2,"endColumn":86},{"ruleId":"692","severity":1,"message":"711","line":2,"column":88,"nodeType":"694","messageId":"695","endLine":2,"endColumn":93},{"ruleId":"692","severity":1,"message":"729","line":2,"column":95,"nodeType":"694","messageId":"695","endLine":2,"endColumn":100},{"ruleId":"692","severity":1,"message":"740","line":2,"column":102,"nodeType":"694","messageId":"695","endLine":2,"endColumn":113},{"ruleId":"692","severity":1,"message":"741","line":2,"column":115,"nodeType":"694","messageId":"695","endLine":2,"endColumn":121},{"ruleId":"692","severity":1,"message":"742","line":2,"column":123,"nodeType":"694","messageId":"695","endLine":2,"endColumn":130},{"ruleId":"692","severity":1,"message":"743","line":3,"column":8,"nodeType":"694","messageId":"695","endLine":3,"endColumn":14},{"ruleId":"692","severity":1,"message":"715","line":5,"column":10,"nodeType":"694","messageId":"695","endLine":5,"endColumn":14},{"ruleId":"684","replacedBy":"744"},{"ruleId":"686","replacedBy":"745"},{"ruleId":"692","severity":1,"message":"746","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":21},{"ruleId":"692","severity":1,"message":"747","line":13,"column":10,"nodeType":"694","messageId":"695","endLine":13,"endColumn":19},{"ruleId":"692","severity":1,"message":"748","line":13,"column":21,"nodeType":"694","messageId":"695","endLine":13,"endColumn":27},{"ruleId":"692","severity":1,"message":"749","line":13,"column":29,"nodeType":"694","messageId":"695","endLine":13,"endColumn":35},{"ruleId":"692","severity":1,"message":"698","line":2,"column":9,"nodeType":"694","messageId":"695","endLine":2,"endColumn":19},{"ruleId":"692","severity":1,"message":"700","line":2,"column":21,"nodeType":"694","messageId":"695","endLine":2,"endColumn":28},{"ruleId":"692","severity":1,"message":"750","line":2,"column":9,"nodeType":"694","messageId":"695","endLine":2,"endColumn":19},{"ruleId":"692","severity":1,"message":"751","line":2,"column":21,"nodeType":"694","messageId":"695","endLine":2,"endColumn":28},{"ruleId":"692","severity":1,"message":"731","line":3,"column":73,"nodeType":"694","messageId":"695","endLine":3,"endColumn":82},{"ruleId":"692","severity":1,"message":"752","line":6,"column":10,"nodeType":"694","messageId":"695","endLine":6,"endColumn":19},{"ruleId":"692","severity":1,"message":"753","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":17},{"ruleId":"692","severity":1,"message":"754","line":7,"column":8,"nodeType":"694","messageId":"695","endLine":7,"endColumn":13},{"ruleId":"692","severity":1,"message":"755","line":8,"column":13,"nodeType":"694","messageId":"695","endLine":8,"endColumn":20},{"ruleId":"692","severity":1,"message":"703","line":30,"column":37,"nodeType":"694","messageId":"695","endLine":30,"endColumn":46},{"ruleId":"692","severity":1,"message":"755","line":18,"column":13,"nodeType":"694","messageId":"695","endLine":18,"endColumn":20},{"ruleId":"756","severity":1,"message":"757","line":72,"column":52,"nodeType":"758","messageId":"759","endLine":72,"endColumn":54},{"ruleId":"756","severity":1,"message":"760","line":72,"column":69,"nodeType":"758","messageId":"759","endLine":72,"endColumn":71},{"ruleId":"756","severity":1,"message":"760","line":106,"column":27,"nodeType":"758","messageId":"759","endLine":106,"endColumn":29},{"ruleId":"756","severity":1,"message":"760","line":110,"column":34,"nodeType":"758","messageId":"759","endLine":110,"endColumn":36},{"ruleId":"692","severity":1,"message":"761","line":122,"column":13,"nodeType":"694","messageId":"695","endLine":122,"endColumn":20},{"ruleId":"717","severity":1,"message":"762","line":124,"column":8,"nodeType":"719","endLine":124,"endColumn":10,"suggestions":"763"},{"ruleId":"692","severity":1,"message":"754","line":7,"column":8,"nodeType":"694","messageId":"695","endLine":7,"endColumn":13},{"ruleId":"692","severity":1,"message":"703","line":29,"column":37,"nodeType":"694","messageId":"695","endLine":29,"endColumn":46},{"ruleId":"692","severity":1,"message":"764","line":18,"column":13,"nodeType":"694","messageId":"695","endLine":18,"endColumn":20},{"ruleId":"756","severity":1,"message":"757","line":71,"column":52,"nodeType":"758","messageId":"759","endLine":71,"endColumn":54},{"ruleId":"756","severity":1,"message":"760","line":103,"column":27,"nodeType":"758","messageId":"759","endLine":103,"endColumn":29},{"ruleId":"692","severity":1,"message":"761","line":116,"column":13,"nodeType":"694","messageId":"695","endLine":116,"endColumn":20},{"ruleId":"717","severity":1,"message":"765","line":118,"column":8,"nodeType":"719","endLine":118,"endColumn":10,"suggestions":"766"},{"ruleId":"692","severity":1,"message":"713","line":1,"column":8,"nodeType":"694","messageId":"695","endLine":1,"endColumn":18},{"ruleId":"692","severity":1,"message":"725","line":7,"column":8,"nodeType":"694","messageId":"695","endLine":7,"endColumn":18},{"ruleId":"692","severity":1,"message":"726","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":16},{"ruleId":"692","severity":1,"message":"693","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":16},{"ruleId":"692","severity":1,"message":"727","line":10,"column":8,"nodeType":"694","messageId":"695","endLine":10,"endColumn":13},{"ruleId":"692","severity":1,"message":"767","line":11,"column":17,"nodeType":"694","messageId":"695","endLine":11,"endColumn":26},{"ruleId":"692","severity":1,"message":"712","line":12,"column":18,"nodeType":"694","messageId":"695","endLine":12,"endColumn":28},{"ruleId":"692","severity":1,"message":"728","line":15,"column":8,"nodeType":"694","messageId":"695","endLine":15,"endColumn":26},{"ruleId":"692","severity":1,"message":"768","line":17,"column":9,"nodeType":"694","messageId":"695","endLine":17,"endColumn":20},{"ruleId":"692","severity":1,"message":"769","line":17,"column":22,"nodeType":"694","messageId":"695","endLine":17,"endColumn":36},{"ruleId":"692","severity":1,"message":"770","line":17,"column":38,"nodeType":"694","messageId":"695","endLine":17,"endColumn":48},{"ruleId":"692","severity":1,"message":"771","line":17,"column":50,"nodeType":"694","messageId":"695","endLine":17,"endColumn":58},{"ruleId":"692","severity":1,"message":"772","line":17,"column":60,"nodeType":"694","messageId":"695","endLine":17,"endColumn":66},{"ruleId":"692","severity":1,"message":"773","line":17,"column":68,"nodeType":"694","messageId":"695","endLine":17,"endColumn":82},{"ruleId":"692","severity":1,"message":"774","line":18,"column":9,"nodeType":"694","messageId":"695","endLine":18,"endColumn":19},{"ruleId":"692","severity":1,"message":"775","line":19,"column":8,"nodeType":"694","messageId":"695","endLine":19,"endColumn":15},{"ruleId":"692","severity":1,"message":"776","line":21,"column":9,"nodeType":"694","messageId":"695","endLine":21,"endColumn":26},{"ruleId":"692","severity":1,"message":"716","line":31,"column":13,"nodeType":"694","messageId":"695","endLine":31,"endColumn":21},{"ruleId":"692","severity":1,"message":"777","line":31,"column":23,"nodeType":"694","messageId":"695","endLine":31,"endColumn":35},{"ruleId":"692","severity":1,"message":"706","line":31,"column":37,"nodeType":"694","messageId":"695","endLine":31,"endColumn":44},{"ruleId":"692","severity":1,"message":"778","line":31,"column":46,"nodeType":"694","messageId":"695","endLine":31,"endColumn":52},{"ruleId":"692","severity":1,"message":"779","line":31,"column":54,"nodeType":"694","messageId":"695","endLine":31,"endColumn":59},{"ruleId":"692","severity":1,"message":"780","line":36,"column":12,"nodeType":"694","messageId":"695","endLine":36,"endColumn":28},{"ruleId":"692","severity":1,"message":"781","line":36,"column":30,"nodeType":"694","messageId":"695","endLine":36,"endColumn":49},{"ruleId":"692","severity":1,"message":"782","line":37,"column":12,"nodeType":"694","messageId":"695","endLine":37,"endColumn":21},{"ruleId":"692","severity":1,"message":"783","line":37,"column":23,"nodeType":"694","messageId":"695","endLine":37,"endColumn":35},{"ruleId":"692","severity":1,"message":"784","line":38,"column":12,"nodeType":"694","messageId":"695","endLine":38,"endColumn":26},{"ruleId":"692","severity":1,"message":"785","line":38,"column":28,"nodeType":"694","messageId":"695","endLine":38,"endColumn":45},{"ruleId":"756","severity":1,"message":"760","line":47,"column":30,"nodeType":"758","messageId":"759","endLine":47,"endColumn":32},{"ruleId":"692","severity":1,"message":"786","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":23},{"ruleId":"692","severity":1,"message":"726","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":16},{"ruleId":"692","severity":1,"message":"693","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":16},{"ruleId":"692","severity":1,"message":"712","line":12,"column":18,"nodeType":"694","messageId":"695","endLine":12,"endColumn":28},{"ruleId":"692","severity":1,"message":"768","line":17,"column":9,"nodeType":"694","messageId":"695","endLine":17,"endColumn":20},{"ruleId":"692","severity":1,"message":"769","line":17,"column":22,"nodeType":"694","messageId":"695","endLine":17,"endColumn":36},{"ruleId":"692","severity":1,"message":"770","line":17,"column":38,"nodeType":"694","messageId":"695","endLine":17,"endColumn":48},{"ruleId":"692","severity":1,"message":"771","line":17,"column":50,"nodeType":"694","messageId":"695","endLine":17,"endColumn":58},{"ruleId":"692","severity":1,"message":"772","line":17,"column":60,"nodeType":"694","messageId":"695","endLine":17,"endColumn":66},{"ruleId":"692","severity":1,"message":"773","line":17,"column":68,"nodeType":"694","messageId":"695","endLine":17,"endColumn":82},{"ruleId":"692","severity":1,"message":"774","line":18,"column":9,"nodeType":"694","messageId":"695","endLine":18,"endColumn":19},{"ruleId":"692","severity":1,"message":"775","line":19,"column":8,"nodeType":"694","messageId":"695","endLine":19,"endColumn":15},{"ruleId":"692","severity":1,"message":"716","line":31,"column":13,"nodeType":"694","messageId":"695","endLine":31,"endColumn":21},{"ruleId":"692","severity":1,"message":"777","line":31,"column":23,"nodeType":"694","messageId":"695","endLine":31,"endColumn":35},{"ruleId":"692","severity":1,"message":"706","line":31,"column":37,"nodeType":"694","messageId":"695","endLine":31,"endColumn":44},{"ruleId":"692","severity":1,"message":"778","line":31,"column":46,"nodeType":"694","messageId":"695","endLine":31,"endColumn":52},{"ruleId":"692","severity":1,"message":"779","line":31,"column":54,"nodeType":"694","messageId":"695","endLine":31,"endColumn":59},{"ruleId":"756","severity":1,"message":"760","line":48,"column":30,"nodeType":"758","messageId":"759","endLine":48,"endColumn":32},{"ruleId":"756","severity":1,"message":"760","line":68,"column":27,"nodeType":"758","messageId":"759","endLine":68,"endColumn":29},{"ruleId":"692","severity":1,"message":"761","line":88,"column":13,"nodeType":"694","messageId":"695","endLine":88,"endColumn":20},{"ruleId":"717","severity":1,"message":"787","line":90,"column":8,"nodeType":"719","endLine":90,"endColumn":10,"suggestions":"788"},{"ruleId":"692","severity":1,"message":"726","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":16},{"ruleId":"692","severity":1,"message":"693","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":16},{"ruleId":"692","severity":1,"message":"712","line":12,"column":18,"nodeType":"694","messageId":"695","endLine":12,"endColumn":28},{"ruleId":"692","severity":1,"message":"768","line":16,"column":9,"nodeType":"694","messageId":"695","endLine":16,"endColumn":20},{"ruleId":"692","severity":1,"message":"769","line":16,"column":22,"nodeType":"694","messageId":"695","endLine":16,"endColumn":36},{"ruleId":"692","severity":1,"message":"770","line":16,"column":38,"nodeType":"694","messageId":"695","endLine":16,"endColumn":48},{"ruleId":"692","severity":1,"message":"771","line":16,"column":50,"nodeType":"694","messageId":"695","endLine":16,"endColumn":58},{"ruleId":"692","severity":1,"message":"772","line":16,"column":60,"nodeType":"694","messageId":"695","endLine":16,"endColumn":66},{"ruleId":"692","severity":1,"message":"773","line":16,"column":68,"nodeType":"694","messageId":"695","endLine":16,"endColumn":82},{"ruleId":"692","severity":1,"message":"774","line":17,"column":9,"nodeType":"694","messageId":"695","endLine":17,"endColumn":19},{"ruleId":"692","severity":1,"message":"775","line":18,"column":8,"nodeType":"694","messageId":"695","endLine":18,"endColumn":15},{"ruleId":"692","severity":1,"message":"716","line":30,"column":13,"nodeType":"694","messageId":"695","endLine":30,"endColumn":21},{"ruleId":"692","severity":1,"message":"777","line":30,"column":23,"nodeType":"694","messageId":"695","endLine":30,"endColumn":35},{"ruleId":"692","severity":1,"message":"706","line":30,"column":37,"nodeType":"694","messageId":"695","endLine":30,"endColumn":44},{"ruleId":"692","severity":1,"message":"778","line":30,"column":46,"nodeType":"694","messageId":"695","endLine":30,"endColumn":52},{"ruleId":"692","severity":1,"message":"779","line":30,"column":54,"nodeType":"694","messageId":"695","endLine":30,"endColumn":59},{"ruleId":"756","severity":1,"message":"760","line":46,"column":30,"nodeType":"758","messageId":"759","endLine":46,"endColumn":32},{"ruleId":"756","severity":1,"message":"760","line":71,"column":27,"nodeType":"758","messageId":"759","endLine":71,"endColumn":29},{"ruleId":"692","severity":1,"message":"761","line":85,"column":13,"nodeType":"694","messageId":"695","endLine":85,"endColumn":20},{"ruleId":"717","severity":1,"message":"789","line":87,"column":8,"nodeType":"719","endLine":87,"endColumn":10,"suggestions":"790"},"no-native-reassign",["791"],"no-negated-in-lhs",["792"],["791"],["792"],["791"],["792"],"@typescript-eslint/no-unused-vars","'ShowIcon' is defined but never used.","Identifier","unusedVar","'groupId' is assigned a value but never used.","'mapAddress' is defined but never used.","'mapStudent' is defined but never used.","'mapUser' is defined but never used.","'Student' is defined but never used.","'Grid' is defined but never used.","'validation' is defined but never used.","'getValues' is assigned a value but never used.","'setError' is assigned a value but never used.","'Console' is defined but never used.","'control' is assigned a value but never used.","'Announcement' is defined but never used.","'Comment' is defined but never used.","'Event' is defined but never used.","'EventSeat' is defined but never used.","'Grade' is defined but never used.","'RouterLink' is defined but never used.","'IconButton' is defined but never used.","'SubjectRows' is assigned a value but never used.","'Link' is defined but never used.","'register' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'groupId'. Either include it or remove the dependency array.","ArrayExpression",["793"],["794"],"React Hook useEffect has a missing dependency: 'gradeId'. Either include it or remove the dependency array.",["795"],"'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'Alert' is defined but never used.","'ConfirmationDialog' is defined but never used.","'Group' is defined but never used.","'mapGroup' is defined but never used.","'TableCell' is defined but never used.",["796"],["797"],"'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'AccountBalance' is defined but never used.","'Business' is defined but never used.","'DateRange' is defined but never used.","'MeetingRoom' is defined but never used.","'School' is defined but never used.","'Subject' is defined but never used.","'People' is defined but never used.",["791"],["792"],"'ListSubheader' is defined but never used.","'ExitToApp' is defined but never used.","'Person' is defined but never used.","'VpnKey' is defined but never used.","'mapTeacher' is defined but never used.","'Teacher' is defined but never used.","'useParams' is defined but never used.","'TextField' is defined but never used.","'Title' is defined but never used.","'student' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'mounted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page', 'sort', 'teachers.length', and 'totalPages'. Either include them or remove the dependency array.",["798"],"'teacher' is defined but never used.","React Hook useEffect has missing dependencies: 'page', 'sort', and 'students.length'. Either include them or remove the dependency array.",["799"],"'useEffect' is defined but never used.","'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'TableSortLabel' is defined but never used.","'Controller' is defined but never used.","'classes' is defined but never used.","'validateFirstName' is defined but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","'reset' is assigned a value but never used.","'deleteDialogOpen' is assigned a value but never used.","'setDeleteDialogOpen' is assigned a value but never used.","'studentId' is assigned a value but never used.","'setStudentId' is assigned a value but never used.","'studentDeleted' is assigned a value but never used.","'setStudentDeleted' is assigned a value but never used.","'EditStudentForm' is defined but never used.","React Hook useEffect has missing dependencies: 'props.studentId' and 'teachers.length'. Either include them or remove the dependency array.",["800"],"React Hook useEffect has missing dependencies: 'props.teacherId' and 'students.length'. Either include them or remove the dependency array.",["801"],"no-global-assign","no-unsafe-negation",{"desc":"802","fix":"803"},{"desc":"804","fix":"805"},{"desc":"806","fix":"807"},{"desc":"802","fix":"808"},{"desc":"804","fix":"809"},{"desc":"810","fix":"811"},{"desc":"812","fix":"813"},{"desc":"814","fix":"815"},{"desc":"816","fix":"817"},"Update the dependencies array to be: [groupId]",{"range":"818","text":"819"},"Update the dependencies array to be: [reset, props, groupId]",{"range":"820","text":"821"},"Update the dependencies array to be: [reset, props, gradeId]",{"range":"822","text":"823"},{"range":"824","text":"819"},{"range":"825","text":"821"},"Update the dependencies array to be: [page, sort, teachers.length, totalPages]",{"range":"826","text":"827"},"Update the dependencies array to be: [page, sort, students.length]",{"range":"828","text":"829"},"Update the dependencies array to be: [props.studentId, teachers.length]",{"range":"830","text":"831"},"Update the dependencies array to be: [props.teacherId, students.length]",{"range":"832","text":"833"},[1480,1482],"[groupId]",[1862,1876],"[reset, props, groupId]",[2414,2428],"[reset, props, gradeId]",[1469,1471],[1851,1865],[4847,4849],"[page, sort, teachers.length, totalPages]",[4590,4592],"[page, sort, students.length]",[3441,3443],"[props.studentId, teachers.length]",[3456,3458],"[props.teacherId, students.length]"]